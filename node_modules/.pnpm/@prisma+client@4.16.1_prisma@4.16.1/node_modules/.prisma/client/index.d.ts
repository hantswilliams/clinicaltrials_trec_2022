
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions

export type PrismaPromise<T> = $Public.PrismaPromise<T>


export type trialsPayload<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
  objects: {}
  scalars: $Extensions.GetResult<{
    id: string
    nct_id: string
    PMID: string[]
    acronym: string[]
    affiliation: string[]
    allocation: string[]
    arm_group_label: string[]
    arm_group_type: string[]
    baseline: string[]
    brief_title: string[]
    certain_agreements: string[]
    citation: string[]
    collaborator: string[]
    completion_date: string[]
    condition: string[]
    contact: string[]
    contact_backup: string[]
    country: string[]
    criteria: string[]
    description: string[]
    disposition_first_posted: string[]
    disposition_first_submitted: string[]
    disposition_first_submitted_qc: string[]
    download_date: string[]
    email: string[]
    enrollment: string[]
    facility: string[]
    gender: string[]
    gender_based: string[]
    gender_description: string[]
    has_dmc: string[]
    has_expanded_access: string[]
    healthy_volunteers: string[]
    intervention_model: string[]
    intervention_model_description: string[]
    intervention_name: string[]
    intervention_type: string[]
    investigator: string[]
    investigator_affiliation: string[]
    investigator_full_name: string[]
    investigator_title: string[]
    ipd_access_criteria: string[]
    ipd_description: string[]
    ipd_info_type: string[]
    ipd_time_frame: string[]
    ipd_url: string[]
    is_fda_regulated_device: string[]
    is_fda_regulated_drug: string[]
    is_us_export: string[]
    keyword: string[]
    last_known_status: string[]
    last_name: string[]
    last_update_posted: string[]
    last_update_submitted: string[]
    last_update_submitted_qc: string[]
    lead_sponsor: string[]
    limitations_and_caveats: string[]
    link_text: string[]
    masking: string[]
    masking_description: string[]
    maximum_age: string[]
    measure: string[]
    mesh_term: string[]
    minimum_age: string[]
    name_title: string[]
    number_of_arms: string[]
    number_of_groups: string[]
    observational_model: string[]
    official_title: string[]
    org_study_id: string[]
    organization: string[]
    other_name: string[]
    outcome_list: string[]
    overall_status: string[]
    participant_flow: string[]
    phase: string[]
    phone: string[]
    phone_ext: string[]
    point_of_contact: string[]
    primary_completion_date: string[]
    primary_purpose: string[]
    provided_document: string[]
    reported_events: string[]
    responsible_party_type: string[]
    results_first_posted: string[]
    results_first_submitted: string[]
    results_first_submitted_qc: string[]
    role: string[]
    sampling_method: string[]
    secondary_id: string[]
    sharing_ipd: string[]
    source: string[]
    start_date: string[]
    status: string[]
    study_doc: string[]
    study_first_posted: string[]
    study_first_submitted: string[]
    study_first_submitted_qc: string[]
    study_pop: string[]
    study_type: string[]
    target_duration: string[]
    textblock: string[]
    time_frame: string[]
    time_perspective: string[]
    type: string[]
    url: string[]
    verification_date: string[]
    why_stopped: string[]
  }, ExtArgs["result"]["trials"]>
  composites: {}
}

/**
 * Model trials
 * 
 */
export type trials = runtime.Types.DefaultSelection<trialsPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Trials
 * const trials = await prisma.trials.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false,
  ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Trials
   * const trials = await prisma.trials.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): Promise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => Promise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): Promise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.trials`: Exposes CRUD operations for the **trials** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Trials
    * const trials = await prisma.trials.findMany()
    * ```
    */
  get trials(): Prisma.trialsDelegate<GlobalReject, ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export type Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export type Args<T, F extends $Public.Operation> = $Public.Args<T, F>
  export type Payload<T, F extends $Public.Operation> = $Public.Payload<T, F>
  export type Result<T, A, F extends $Public.Operation> = $Public.Result<T, A, F>
  export type Exact<T, W> = $Public.Exact<T, W>

  /**
   * Prisma Client JS version: 4.16.1
   * Query Engine version: b20ead4d3ab9e78ac112966e242ded703f4a052c
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    trials: 'trials'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.Args}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'trials'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      trials: {
        operations: {
          findUnique: {
            args: Prisma.trialsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<trialsPayload> | null
            payload: trialsPayload<ExtArgs>
          }
          findUniqueOrThrow: {
            args: Prisma.trialsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<trialsPayload>
            payload: trialsPayload<ExtArgs>
          }
          findFirst: {
            args: Prisma.trialsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<trialsPayload> | null
            payload: trialsPayload<ExtArgs>
          }
          findFirstOrThrow: {
            args: Prisma.trialsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<trialsPayload>
            payload: trialsPayload<ExtArgs>
          }
          findMany: {
            args: Prisma.trialsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<trialsPayload>[]
            payload: trialsPayload<ExtArgs>
          }
          create: {
            args: Prisma.trialsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<trialsPayload>
            payload: trialsPayload<ExtArgs>
          }
          createMany: {
            args: Prisma.trialsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
            payload: trialsPayload<ExtArgs>
          }
          delete: {
            args: Prisma.trialsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<trialsPayload>
            payload: trialsPayload<ExtArgs>
          }
          update: {
            args: Prisma.trialsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<trialsPayload>
            payload: trialsPayload<ExtArgs>
          }
          deleteMany: {
            args: Prisma.trialsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
            payload: trialsPayload<ExtArgs>
          }
          updateMany: {
            args: Prisma.trialsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
            payload: trialsPayload<ExtArgs>
          }
          upsert: {
            args: Prisma.trialsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<trialsPayload>
            payload: trialsPayload<ExtArgs>
          }
          aggregate: {
            args: Prisma.TrialsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTrials>
            payload: trialsPayload<ExtArgs>
          }
          groupBy: {
            args: Prisma.TrialsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TrialsGroupByOutputType>[]
            payload: trialsPayload<ExtArgs>
          }
          count: {
            args: Prisma.trialsCountArgs<ExtArgs>,
            result: $Utils.Optional<TrialsCountAggregateOutputType> | number
            payload: trialsPayload<ExtArgs>
          }
        }
      }
    }
  } & {
    other: {
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
          payload: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
          payload: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
          payload: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
          payload: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends RejectOnNotFound
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     * @deprecated since 4.0.0. Use `findUniqueOrThrow`/`findFirstOrThrow` methods instead.
     * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model trials
   */


  export type AggregateTrials = {
    _count: TrialsCountAggregateOutputType | null
    _min: TrialsMinAggregateOutputType | null
    _max: TrialsMaxAggregateOutputType | null
  }

  export type TrialsMinAggregateOutputType = {
    id: string | null
    nct_id: string | null
  }

  export type TrialsMaxAggregateOutputType = {
    id: string | null
    nct_id: string | null
  }

  export type TrialsCountAggregateOutputType = {
    id: number
    nct_id: number
    PMID: number
    acronym: number
    affiliation: number
    allocation: number
    arm_group_label: number
    arm_group_type: number
    baseline: number
    brief_title: number
    certain_agreements: number
    citation: number
    collaborator: number
    completion_date: number
    condition: number
    contact: number
    contact_backup: number
    country: number
    criteria: number
    description: number
    disposition_first_posted: number
    disposition_first_submitted: number
    disposition_first_submitted_qc: number
    download_date: number
    email: number
    enrollment: number
    facility: number
    gender: number
    gender_based: number
    gender_description: number
    has_dmc: number
    has_expanded_access: number
    healthy_volunteers: number
    intervention_model: number
    intervention_model_description: number
    intervention_name: number
    intervention_type: number
    investigator: number
    investigator_affiliation: number
    investigator_full_name: number
    investigator_title: number
    ipd_access_criteria: number
    ipd_description: number
    ipd_info_type: number
    ipd_time_frame: number
    ipd_url: number
    is_fda_regulated_device: number
    is_fda_regulated_drug: number
    is_us_export: number
    keyword: number
    last_known_status: number
    last_name: number
    last_update_posted: number
    last_update_submitted: number
    last_update_submitted_qc: number
    lead_sponsor: number
    limitations_and_caveats: number
    link_text: number
    masking: number
    masking_description: number
    maximum_age: number
    measure: number
    mesh_term: number
    minimum_age: number
    name_title: number
    number_of_arms: number
    number_of_groups: number
    observational_model: number
    official_title: number
    org_study_id: number
    organization: number
    other_name: number
    outcome_list: number
    overall_status: number
    participant_flow: number
    phase: number
    phone: number
    phone_ext: number
    point_of_contact: number
    primary_completion_date: number
    primary_purpose: number
    provided_document: number
    reported_events: number
    responsible_party_type: number
    results_first_posted: number
    results_first_submitted: number
    results_first_submitted_qc: number
    role: number
    sampling_method: number
    secondary_id: number
    sharing_ipd: number
    source: number
    start_date: number
    status: number
    study_doc: number
    study_first_posted: number
    study_first_submitted: number
    study_first_submitted_qc: number
    study_pop: number
    study_type: number
    target_duration: number
    textblock: number
    time_frame: number
    time_perspective: number
    type: number
    url: number
    verification_date: number
    why_stopped: number
    _all: number
  }


  export type TrialsMinAggregateInputType = {
    id?: true
    nct_id?: true
  }

  export type TrialsMaxAggregateInputType = {
    id?: true
    nct_id?: true
  }

  export type TrialsCountAggregateInputType = {
    id?: true
    nct_id?: true
    PMID?: true
    acronym?: true
    affiliation?: true
    allocation?: true
    arm_group_label?: true
    arm_group_type?: true
    baseline?: true
    brief_title?: true
    certain_agreements?: true
    citation?: true
    collaborator?: true
    completion_date?: true
    condition?: true
    contact?: true
    contact_backup?: true
    country?: true
    criteria?: true
    description?: true
    disposition_first_posted?: true
    disposition_first_submitted?: true
    disposition_first_submitted_qc?: true
    download_date?: true
    email?: true
    enrollment?: true
    facility?: true
    gender?: true
    gender_based?: true
    gender_description?: true
    has_dmc?: true
    has_expanded_access?: true
    healthy_volunteers?: true
    intervention_model?: true
    intervention_model_description?: true
    intervention_name?: true
    intervention_type?: true
    investigator?: true
    investigator_affiliation?: true
    investigator_full_name?: true
    investigator_title?: true
    ipd_access_criteria?: true
    ipd_description?: true
    ipd_info_type?: true
    ipd_time_frame?: true
    ipd_url?: true
    is_fda_regulated_device?: true
    is_fda_regulated_drug?: true
    is_us_export?: true
    keyword?: true
    last_known_status?: true
    last_name?: true
    last_update_posted?: true
    last_update_submitted?: true
    last_update_submitted_qc?: true
    lead_sponsor?: true
    limitations_and_caveats?: true
    link_text?: true
    masking?: true
    masking_description?: true
    maximum_age?: true
    measure?: true
    mesh_term?: true
    minimum_age?: true
    name_title?: true
    number_of_arms?: true
    number_of_groups?: true
    observational_model?: true
    official_title?: true
    org_study_id?: true
    organization?: true
    other_name?: true
    outcome_list?: true
    overall_status?: true
    participant_flow?: true
    phase?: true
    phone?: true
    phone_ext?: true
    point_of_contact?: true
    primary_completion_date?: true
    primary_purpose?: true
    provided_document?: true
    reported_events?: true
    responsible_party_type?: true
    results_first_posted?: true
    results_first_submitted?: true
    results_first_submitted_qc?: true
    role?: true
    sampling_method?: true
    secondary_id?: true
    sharing_ipd?: true
    source?: true
    start_date?: true
    status?: true
    study_doc?: true
    study_first_posted?: true
    study_first_submitted?: true
    study_first_submitted_qc?: true
    study_pop?: true
    study_type?: true
    target_duration?: true
    textblock?: true
    time_frame?: true
    time_perspective?: true
    type?: true
    url?: true
    verification_date?: true
    why_stopped?: true
    _all?: true
  }

  export type TrialsAggregateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which trials to aggregate.
     */
    where?: trialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trials to fetch.
     */
    orderBy?: Enumerable<trialsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: trialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned trials
    **/
    _count?: true | TrialsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TrialsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TrialsMaxAggregateInputType
  }

  export type GetTrialsAggregateType<T extends TrialsAggregateArgs> = {
        [P in keyof T & keyof AggregateTrials]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTrials[P]>
      : GetScalarType<T[P], AggregateTrials[P]>
  }




  export type TrialsGroupByArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    where?: trialsWhereInput
    orderBy?: Enumerable<trialsOrderByWithAggregationInput>
    by: TrialsScalarFieldEnum[]
    having?: trialsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TrialsCountAggregateInputType | true
    _min?: TrialsMinAggregateInputType
    _max?: TrialsMaxAggregateInputType
  }


  export type TrialsGroupByOutputType = {
    id: string
    nct_id: string
    PMID: string[]
    acronym: string[]
    affiliation: string[]
    allocation: string[]
    arm_group_label: string[]
    arm_group_type: string[]
    baseline: string[]
    brief_title: string[]
    certain_agreements: string[]
    citation: string[]
    collaborator: string[]
    completion_date: string[]
    condition: string[]
    contact: string[]
    contact_backup: string[]
    country: string[]
    criteria: string[]
    description: string[]
    disposition_first_posted: string[]
    disposition_first_submitted: string[]
    disposition_first_submitted_qc: string[]
    download_date: string[]
    email: string[]
    enrollment: string[]
    facility: string[]
    gender: string[]
    gender_based: string[]
    gender_description: string[]
    has_dmc: string[]
    has_expanded_access: string[]
    healthy_volunteers: string[]
    intervention_model: string[]
    intervention_model_description: string[]
    intervention_name: string[]
    intervention_type: string[]
    investigator: string[]
    investigator_affiliation: string[]
    investigator_full_name: string[]
    investigator_title: string[]
    ipd_access_criteria: string[]
    ipd_description: string[]
    ipd_info_type: string[]
    ipd_time_frame: string[]
    ipd_url: string[]
    is_fda_regulated_device: string[]
    is_fda_regulated_drug: string[]
    is_us_export: string[]
    keyword: string[]
    last_known_status: string[]
    last_name: string[]
    last_update_posted: string[]
    last_update_submitted: string[]
    last_update_submitted_qc: string[]
    lead_sponsor: string[]
    limitations_and_caveats: string[]
    link_text: string[]
    masking: string[]
    masking_description: string[]
    maximum_age: string[]
    measure: string[]
    mesh_term: string[]
    minimum_age: string[]
    name_title: string[]
    number_of_arms: string[]
    number_of_groups: string[]
    observational_model: string[]
    official_title: string[]
    org_study_id: string[]
    organization: string[]
    other_name: string[]
    outcome_list: string[]
    overall_status: string[]
    participant_flow: string[]
    phase: string[]
    phone: string[]
    phone_ext: string[]
    point_of_contact: string[]
    primary_completion_date: string[]
    primary_purpose: string[]
    provided_document: string[]
    reported_events: string[]
    responsible_party_type: string[]
    results_first_posted: string[]
    results_first_submitted: string[]
    results_first_submitted_qc: string[]
    role: string[]
    sampling_method: string[]
    secondary_id: string[]
    sharing_ipd: string[]
    source: string[]
    start_date: string[]
    status: string[]
    study_doc: string[]
    study_first_posted: string[]
    study_first_submitted: string[]
    study_first_submitted_qc: string[]
    study_pop: string[]
    study_type: string[]
    target_duration: string[]
    textblock: string[]
    time_frame: string[]
    time_perspective: string[]
    type: string[]
    url: string[]
    verification_date: string[]
    why_stopped: string[]
    _count: TrialsCountAggregateOutputType | null
    _min: TrialsMinAggregateOutputType | null
    _max: TrialsMaxAggregateOutputType | null
  }

  type GetTrialsGroupByPayload<T extends TrialsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickArray<TrialsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TrialsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TrialsGroupByOutputType[P]>
            : GetScalarType<T[P], TrialsGroupByOutputType[P]>
        }
      >
    >


  export type trialsSelect<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nct_id?: boolean
    PMID?: boolean
    acronym?: boolean
    affiliation?: boolean
    allocation?: boolean
    arm_group_label?: boolean
    arm_group_type?: boolean
    baseline?: boolean
    brief_title?: boolean
    certain_agreements?: boolean
    citation?: boolean
    collaborator?: boolean
    completion_date?: boolean
    condition?: boolean
    contact?: boolean
    contact_backup?: boolean
    country?: boolean
    criteria?: boolean
    description?: boolean
    disposition_first_posted?: boolean
    disposition_first_submitted?: boolean
    disposition_first_submitted_qc?: boolean
    download_date?: boolean
    email?: boolean
    enrollment?: boolean
    facility?: boolean
    gender?: boolean
    gender_based?: boolean
    gender_description?: boolean
    has_dmc?: boolean
    has_expanded_access?: boolean
    healthy_volunteers?: boolean
    intervention_model?: boolean
    intervention_model_description?: boolean
    intervention_name?: boolean
    intervention_type?: boolean
    investigator?: boolean
    investigator_affiliation?: boolean
    investigator_full_name?: boolean
    investigator_title?: boolean
    ipd_access_criteria?: boolean
    ipd_description?: boolean
    ipd_info_type?: boolean
    ipd_time_frame?: boolean
    ipd_url?: boolean
    is_fda_regulated_device?: boolean
    is_fda_regulated_drug?: boolean
    is_us_export?: boolean
    keyword?: boolean
    last_known_status?: boolean
    last_name?: boolean
    last_update_posted?: boolean
    last_update_submitted?: boolean
    last_update_submitted_qc?: boolean
    lead_sponsor?: boolean
    limitations_and_caveats?: boolean
    link_text?: boolean
    masking?: boolean
    masking_description?: boolean
    maximum_age?: boolean
    measure?: boolean
    mesh_term?: boolean
    minimum_age?: boolean
    name_title?: boolean
    number_of_arms?: boolean
    number_of_groups?: boolean
    observational_model?: boolean
    official_title?: boolean
    org_study_id?: boolean
    organization?: boolean
    other_name?: boolean
    outcome_list?: boolean
    overall_status?: boolean
    participant_flow?: boolean
    phase?: boolean
    phone?: boolean
    phone_ext?: boolean
    point_of_contact?: boolean
    primary_completion_date?: boolean
    primary_purpose?: boolean
    provided_document?: boolean
    reported_events?: boolean
    responsible_party_type?: boolean
    results_first_posted?: boolean
    results_first_submitted?: boolean
    results_first_submitted_qc?: boolean
    role?: boolean
    sampling_method?: boolean
    secondary_id?: boolean
    sharing_ipd?: boolean
    source?: boolean
    start_date?: boolean
    status?: boolean
    study_doc?: boolean
    study_first_posted?: boolean
    study_first_submitted?: boolean
    study_first_submitted_qc?: boolean
    study_pop?: boolean
    study_type?: boolean
    target_duration?: boolean
    textblock?: boolean
    time_frame?: boolean
    time_perspective?: boolean
    type?: boolean
    url?: boolean
    verification_date?: boolean
    why_stopped?: boolean
  }, ExtArgs["result"]["trials"]>

  export type trialsSelectScalar = {
    id?: boolean
    nct_id?: boolean
    PMID?: boolean
    acronym?: boolean
    affiliation?: boolean
    allocation?: boolean
    arm_group_label?: boolean
    arm_group_type?: boolean
    baseline?: boolean
    brief_title?: boolean
    certain_agreements?: boolean
    citation?: boolean
    collaborator?: boolean
    completion_date?: boolean
    condition?: boolean
    contact?: boolean
    contact_backup?: boolean
    country?: boolean
    criteria?: boolean
    description?: boolean
    disposition_first_posted?: boolean
    disposition_first_submitted?: boolean
    disposition_first_submitted_qc?: boolean
    download_date?: boolean
    email?: boolean
    enrollment?: boolean
    facility?: boolean
    gender?: boolean
    gender_based?: boolean
    gender_description?: boolean
    has_dmc?: boolean
    has_expanded_access?: boolean
    healthy_volunteers?: boolean
    intervention_model?: boolean
    intervention_model_description?: boolean
    intervention_name?: boolean
    intervention_type?: boolean
    investigator?: boolean
    investigator_affiliation?: boolean
    investigator_full_name?: boolean
    investigator_title?: boolean
    ipd_access_criteria?: boolean
    ipd_description?: boolean
    ipd_info_type?: boolean
    ipd_time_frame?: boolean
    ipd_url?: boolean
    is_fda_regulated_device?: boolean
    is_fda_regulated_drug?: boolean
    is_us_export?: boolean
    keyword?: boolean
    last_known_status?: boolean
    last_name?: boolean
    last_update_posted?: boolean
    last_update_submitted?: boolean
    last_update_submitted_qc?: boolean
    lead_sponsor?: boolean
    limitations_and_caveats?: boolean
    link_text?: boolean
    masking?: boolean
    masking_description?: boolean
    maximum_age?: boolean
    measure?: boolean
    mesh_term?: boolean
    minimum_age?: boolean
    name_title?: boolean
    number_of_arms?: boolean
    number_of_groups?: boolean
    observational_model?: boolean
    official_title?: boolean
    org_study_id?: boolean
    organization?: boolean
    other_name?: boolean
    outcome_list?: boolean
    overall_status?: boolean
    participant_flow?: boolean
    phase?: boolean
    phone?: boolean
    phone_ext?: boolean
    point_of_contact?: boolean
    primary_completion_date?: boolean
    primary_purpose?: boolean
    provided_document?: boolean
    reported_events?: boolean
    responsible_party_type?: boolean
    results_first_posted?: boolean
    results_first_submitted?: boolean
    results_first_submitted_qc?: boolean
    role?: boolean
    sampling_method?: boolean
    secondary_id?: boolean
    sharing_ipd?: boolean
    source?: boolean
    start_date?: boolean
    status?: boolean
    study_doc?: boolean
    study_first_posted?: boolean
    study_first_submitted?: boolean
    study_first_submitted_qc?: boolean
    study_pop?: boolean
    study_type?: boolean
    target_duration?: boolean
    textblock?: boolean
    time_frame?: boolean
    time_perspective?: boolean
    type?: boolean
    url?: boolean
    verification_date?: boolean
    why_stopped?: boolean
  }


  type trialsGetPayload<S extends boolean | null | undefined | trialsArgs> = $Types.GetResult<trialsPayload, S>

  type trialsCountArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = 
    Omit<trialsFindManyArgs, 'select' | 'include'> & {
      select?: TrialsCountAggregateInputType | true
    }

  export interface trialsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['trials'], meta: { name: 'trials' } }
    /**
     * Find zero or one Trials that matches the filter.
     * @param {trialsFindUniqueArgs} args - Arguments to find a Trials
     * @example
     * // Get one Trials
     * const trials = await prisma.trials.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends trialsFindUniqueArgs<ExtArgs>, LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, trialsFindUniqueArgs<ExtArgs>>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'trials'> extends True ? Prisma__trialsClient<$Types.GetResult<trialsPayload<ExtArgs>, T, 'findUnique', never>, never, ExtArgs> : Prisma__trialsClient<$Types.GetResult<trialsPayload<ExtArgs>, T, 'findUnique', never> | null, null, ExtArgs>

    /**
     * Find one Trials that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {trialsFindUniqueOrThrowArgs} args - Arguments to find a Trials
     * @example
     * // Get one Trials
     * const trials = await prisma.trials.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends trialsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, trialsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__trialsClient<$Types.GetResult<trialsPayload<ExtArgs>, T, 'findUniqueOrThrow', never>, never, ExtArgs>

    /**
     * Find the first Trials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {trialsFindFirstArgs} args - Arguments to find a Trials
     * @example
     * // Get one Trials
     * const trials = await prisma.trials.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends trialsFindFirstArgs<ExtArgs>, LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, trialsFindFirstArgs<ExtArgs>>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'trials'> extends True ? Prisma__trialsClient<$Types.GetResult<trialsPayload<ExtArgs>, T, 'findFirst', never>, never, ExtArgs> : Prisma__trialsClient<$Types.GetResult<trialsPayload<ExtArgs>, T, 'findFirst', never> | null, null, ExtArgs>

    /**
     * Find the first Trials that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {trialsFindFirstOrThrowArgs} args - Arguments to find a Trials
     * @example
     * // Get one Trials
     * const trials = await prisma.trials.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends trialsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, trialsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__trialsClient<$Types.GetResult<trialsPayload<ExtArgs>, T, 'findFirstOrThrow', never>, never, ExtArgs>

    /**
     * Find zero or more Trials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {trialsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Trials
     * const trials = await prisma.trials.findMany()
     * 
     * // Get first 10 Trials
     * const trials = await prisma.trials.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const trialsWithIdOnly = await prisma.trials.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends trialsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, trialsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Types.GetResult<trialsPayload<ExtArgs>, T, 'findMany', never>>

    /**
     * Create a Trials.
     * @param {trialsCreateArgs} args - Arguments to create a Trials.
     * @example
     * // Create one Trials
     * const Trials = await prisma.trials.create({
     *   data: {
     *     // ... data to create a Trials
     *   }
     * })
     * 
    **/
    create<T extends trialsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, trialsCreateArgs<ExtArgs>>
    ): Prisma__trialsClient<$Types.GetResult<trialsPayload<ExtArgs>, T, 'create', never>, never, ExtArgs>

    /**
     * Create many Trials.
     *     @param {trialsCreateManyArgs} args - Arguments to create many Trials.
     *     @example
     *     // Create many Trials
     *     const trials = await prisma.trials.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends trialsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, trialsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Trials.
     * @param {trialsDeleteArgs} args - Arguments to delete one Trials.
     * @example
     * // Delete one Trials
     * const Trials = await prisma.trials.delete({
     *   where: {
     *     // ... filter to delete one Trials
     *   }
     * })
     * 
    **/
    delete<T extends trialsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, trialsDeleteArgs<ExtArgs>>
    ): Prisma__trialsClient<$Types.GetResult<trialsPayload<ExtArgs>, T, 'delete', never>, never, ExtArgs>

    /**
     * Update one Trials.
     * @param {trialsUpdateArgs} args - Arguments to update one Trials.
     * @example
     * // Update one Trials
     * const trials = await prisma.trials.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends trialsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, trialsUpdateArgs<ExtArgs>>
    ): Prisma__trialsClient<$Types.GetResult<trialsPayload<ExtArgs>, T, 'update', never>, never, ExtArgs>

    /**
     * Delete zero or more Trials.
     * @param {trialsDeleteManyArgs} args - Arguments to filter Trials to delete.
     * @example
     * // Delete a few Trials
     * const { count } = await prisma.trials.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends trialsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, trialsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Trials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {trialsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Trials
     * const trials = await prisma.trials.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends trialsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, trialsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Trials.
     * @param {trialsUpsertArgs} args - Arguments to update or create a Trials.
     * @example
     * // Update or create a Trials
     * const trials = await prisma.trials.upsert({
     *   create: {
     *     // ... data to create a Trials
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Trials we want to update
     *   }
     * })
    **/
    upsert<T extends trialsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, trialsUpsertArgs<ExtArgs>>
    ): Prisma__trialsClient<$Types.GetResult<trialsPayload<ExtArgs>, T, 'upsert', never>, never, ExtArgs>

    /**
     * Count the number of Trials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {trialsCountArgs} args - Arguments to filter Trials to count.
     * @example
     * // Count the number of Trials
     * const count = await prisma.trials.count({
     *   where: {
     *     // ... the filter for the Trials we want to count
     *   }
     * })
    **/
    count<T extends trialsCountArgs>(
      args?: Subset<T, trialsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TrialsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Trials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrialsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TrialsAggregateArgs>(args: Subset<T, TrialsAggregateArgs>): Prisma.PrismaPromise<GetTrialsAggregateType<T>>

    /**
     * Group by Trials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrialsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TrialsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TrialsGroupByArgs['orderBy'] }
        : { orderBy?: TrialsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TrialsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTrialsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for trials.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__trialsClient<T, Null = never, ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> implements Prisma.PrismaPromise<T> {
    private readonly _dmmf;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    constructor(_dmmf: runtime.DMMFClass, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);


    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * trials base type for findUnique actions
   */
  export type trialsFindUniqueArgsBase<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trials
     */
    select?: trialsSelect<ExtArgs> | null
    /**
     * Filter, which trials to fetch.
     */
    where: trialsWhereUniqueInput
  }

  /**
   * trials findUnique
   */
  export interface trialsFindUniqueArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends trialsFindUniqueArgsBase<ExtArgs> {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * trials findUniqueOrThrow
   */
  export type trialsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trials
     */
    select?: trialsSelect<ExtArgs> | null
    /**
     * Filter, which trials to fetch.
     */
    where: trialsWhereUniqueInput
  }


  /**
   * trials base type for findFirst actions
   */
  export type trialsFindFirstArgsBase<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trials
     */
    select?: trialsSelect<ExtArgs> | null
    /**
     * Filter, which trials to fetch.
     */
    where?: trialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trials to fetch.
     */
    orderBy?: Enumerable<trialsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for trials.
     */
    cursor?: trialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of trials.
     */
    distinct?: Enumerable<TrialsScalarFieldEnum>
  }

  /**
   * trials findFirst
   */
  export interface trialsFindFirstArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> extends trialsFindFirstArgsBase<ExtArgs> {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * trials findFirstOrThrow
   */
  export type trialsFindFirstOrThrowArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trials
     */
    select?: trialsSelect<ExtArgs> | null
    /**
     * Filter, which trials to fetch.
     */
    where?: trialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trials to fetch.
     */
    orderBy?: Enumerable<trialsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for trials.
     */
    cursor?: trialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of trials.
     */
    distinct?: Enumerable<TrialsScalarFieldEnum>
  }


  /**
   * trials findMany
   */
  export type trialsFindManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trials
     */
    select?: trialsSelect<ExtArgs> | null
    /**
     * Filter, which trials to fetch.
     */
    where?: trialsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of trials to fetch.
     */
    orderBy?: Enumerable<trialsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing trials.
     */
    cursor?: trialsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` trials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` trials.
     */
    skip?: number
    distinct?: Enumerable<TrialsScalarFieldEnum>
  }


  /**
   * trials create
   */
  export type trialsCreateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trials
     */
    select?: trialsSelect<ExtArgs> | null
    /**
     * The data needed to create a trials.
     */
    data: XOR<trialsCreateInput, trialsUncheckedCreateInput>
  }


  /**
   * trials createMany
   */
  export type trialsCreateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many trials.
     */
    data: Enumerable<trialsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * trials update
   */
  export type trialsUpdateArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trials
     */
    select?: trialsSelect<ExtArgs> | null
    /**
     * The data needed to update a trials.
     */
    data: XOR<trialsUpdateInput, trialsUncheckedUpdateInput>
    /**
     * Choose, which trials to update.
     */
    where: trialsWhereUniqueInput
  }


  /**
   * trials updateMany
   */
  export type trialsUpdateManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * The data used to update trials.
     */
    data: XOR<trialsUpdateManyMutationInput, trialsUncheckedUpdateManyInput>
    /**
     * Filter which trials to update
     */
    where?: trialsWhereInput
  }


  /**
   * trials upsert
   */
  export type trialsUpsertArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trials
     */
    select?: trialsSelect<ExtArgs> | null
    /**
     * The filter to search for the trials to update in case it exists.
     */
    where: trialsWhereUniqueInput
    /**
     * In case the trials found by the `where` argument doesn't exist, create a new trials with this data.
     */
    create: XOR<trialsCreateInput, trialsUncheckedCreateInput>
    /**
     * In case the trials was found with the provided `where` argument, update it with this data.
     */
    update: XOR<trialsUpdateInput, trialsUncheckedUpdateInput>
  }


  /**
   * trials delete
   */
  export type trialsDeleteArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trials
     */
    select?: trialsSelect<ExtArgs> | null
    /**
     * Filter which trials to delete.
     */
    where: trialsWhereUniqueInput
  }


  /**
   * trials deleteMany
   */
  export type trialsDeleteManyArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Filter which trials to delete
     */
    where?: trialsWhereInput
  }


  /**
   * trials without action
   */
  export type trialsArgs<ExtArgs extends $Extensions.Args = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the trials
     */
    select?: trialsSelect<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const TrialsScalarFieldEnum: {
    id: 'id',
    nct_id: 'nct_id',
    PMID: 'PMID',
    acronym: 'acronym',
    affiliation: 'affiliation',
    allocation: 'allocation',
    arm_group_label: 'arm_group_label',
    arm_group_type: 'arm_group_type',
    baseline: 'baseline',
    brief_title: 'brief_title',
    certain_agreements: 'certain_agreements',
    citation: 'citation',
    collaborator: 'collaborator',
    completion_date: 'completion_date',
    condition: 'condition',
    contact: 'contact',
    contact_backup: 'contact_backup',
    country: 'country',
    criteria: 'criteria',
    description: 'description',
    disposition_first_posted: 'disposition_first_posted',
    disposition_first_submitted: 'disposition_first_submitted',
    disposition_first_submitted_qc: 'disposition_first_submitted_qc',
    download_date: 'download_date',
    email: 'email',
    enrollment: 'enrollment',
    facility: 'facility',
    gender: 'gender',
    gender_based: 'gender_based',
    gender_description: 'gender_description',
    has_dmc: 'has_dmc',
    has_expanded_access: 'has_expanded_access',
    healthy_volunteers: 'healthy_volunteers',
    intervention_model: 'intervention_model',
    intervention_model_description: 'intervention_model_description',
    intervention_name: 'intervention_name',
    intervention_type: 'intervention_type',
    investigator: 'investigator',
    investigator_affiliation: 'investigator_affiliation',
    investigator_full_name: 'investigator_full_name',
    investigator_title: 'investigator_title',
    ipd_access_criteria: 'ipd_access_criteria',
    ipd_description: 'ipd_description',
    ipd_info_type: 'ipd_info_type',
    ipd_time_frame: 'ipd_time_frame',
    ipd_url: 'ipd_url',
    is_fda_regulated_device: 'is_fda_regulated_device',
    is_fda_regulated_drug: 'is_fda_regulated_drug',
    is_us_export: 'is_us_export',
    keyword: 'keyword',
    last_known_status: 'last_known_status',
    last_name: 'last_name',
    last_update_posted: 'last_update_posted',
    last_update_submitted: 'last_update_submitted',
    last_update_submitted_qc: 'last_update_submitted_qc',
    lead_sponsor: 'lead_sponsor',
    limitations_and_caveats: 'limitations_and_caveats',
    link_text: 'link_text',
    masking: 'masking',
    masking_description: 'masking_description',
    maximum_age: 'maximum_age',
    measure: 'measure',
    mesh_term: 'mesh_term',
    minimum_age: 'minimum_age',
    name_title: 'name_title',
    number_of_arms: 'number_of_arms',
    number_of_groups: 'number_of_groups',
    observational_model: 'observational_model',
    official_title: 'official_title',
    org_study_id: 'org_study_id',
    organization: 'organization',
    other_name: 'other_name',
    outcome_list: 'outcome_list',
    overall_status: 'overall_status',
    participant_flow: 'participant_flow',
    phase: 'phase',
    phone: 'phone',
    phone_ext: 'phone_ext',
    point_of_contact: 'point_of_contact',
    primary_completion_date: 'primary_completion_date',
    primary_purpose: 'primary_purpose',
    provided_document: 'provided_document',
    reported_events: 'reported_events',
    responsible_party_type: 'responsible_party_type',
    results_first_posted: 'results_first_posted',
    results_first_submitted: 'results_first_submitted',
    results_first_submitted_qc: 'results_first_submitted_qc',
    role: 'role',
    sampling_method: 'sampling_method',
    secondary_id: 'secondary_id',
    sharing_ipd: 'sharing_ipd',
    source: 'source',
    start_date: 'start_date',
    status: 'status',
    study_doc: 'study_doc',
    study_first_posted: 'study_first_posted',
    study_first_submitted: 'study_first_submitted',
    study_first_submitted_qc: 'study_first_submitted_qc',
    study_pop: 'study_pop',
    study_type: 'study_type',
    target_duration: 'target_duration',
    textblock: 'textblock',
    time_frame: 'time_frame',
    time_perspective: 'time_perspective',
    type: 'type',
    url: 'url',
    verification_date: 'verification_date',
    why_stopped: 'why_stopped'
  };

  export type TrialsScalarFieldEnum = (typeof TrialsScalarFieldEnum)[keyof typeof TrialsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Deep Input Types
   */


  export type trialsWhereInput = {
    AND?: Enumerable<trialsWhereInput>
    OR?: Enumerable<trialsWhereInput>
    NOT?: Enumerable<trialsWhereInput>
    id?: StringFilter | string
    nct_id?: StringFilter | string
    PMID?: StringNullableListFilter
    acronym?: StringNullableListFilter
    affiliation?: StringNullableListFilter
    allocation?: StringNullableListFilter
    arm_group_label?: StringNullableListFilter
    arm_group_type?: StringNullableListFilter
    baseline?: StringNullableListFilter
    brief_title?: StringNullableListFilter
    certain_agreements?: StringNullableListFilter
    citation?: StringNullableListFilter
    collaborator?: StringNullableListFilter
    completion_date?: StringNullableListFilter
    condition?: StringNullableListFilter
    contact?: StringNullableListFilter
    contact_backup?: StringNullableListFilter
    country?: StringNullableListFilter
    criteria?: StringNullableListFilter
    description?: StringNullableListFilter
    disposition_first_posted?: StringNullableListFilter
    disposition_first_submitted?: StringNullableListFilter
    disposition_first_submitted_qc?: StringNullableListFilter
    download_date?: StringNullableListFilter
    email?: StringNullableListFilter
    enrollment?: StringNullableListFilter
    facility?: StringNullableListFilter
    gender?: StringNullableListFilter
    gender_based?: StringNullableListFilter
    gender_description?: StringNullableListFilter
    has_dmc?: StringNullableListFilter
    has_expanded_access?: StringNullableListFilter
    healthy_volunteers?: StringNullableListFilter
    intervention_model?: StringNullableListFilter
    intervention_model_description?: StringNullableListFilter
    intervention_name?: StringNullableListFilter
    intervention_type?: StringNullableListFilter
    investigator?: StringNullableListFilter
    investigator_affiliation?: StringNullableListFilter
    investigator_full_name?: StringNullableListFilter
    investigator_title?: StringNullableListFilter
    ipd_access_criteria?: StringNullableListFilter
    ipd_description?: StringNullableListFilter
    ipd_info_type?: StringNullableListFilter
    ipd_time_frame?: StringNullableListFilter
    ipd_url?: StringNullableListFilter
    is_fda_regulated_device?: StringNullableListFilter
    is_fda_regulated_drug?: StringNullableListFilter
    is_us_export?: StringNullableListFilter
    keyword?: StringNullableListFilter
    last_known_status?: StringNullableListFilter
    last_name?: StringNullableListFilter
    last_update_posted?: StringNullableListFilter
    last_update_submitted?: StringNullableListFilter
    last_update_submitted_qc?: StringNullableListFilter
    lead_sponsor?: StringNullableListFilter
    limitations_and_caveats?: StringNullableListFilter
    link_text?: StringNullableListFilter
    masking?: StringNullableListFilter
    masking_description?: StringNullableListFilter
    maximum_age?: StringNullableListFilter
    measure?: StringNullableListFilter
    mesh_term?: StringNullableListFilter
    minimum_age?: StringNullableListFilter
    name_title?: StringNullableListFilter
    number_of_arms?: StringNullableListFilter
    number_of_groups?: StringNullableListFilter
    observational_model?: StringNullableListFilter
    official_title?: StringNullableListFilter
    org_study_id?: StringNullableListFilter
    organization?: StringNullableListFilter
    other_name?: StringNullableListFilter
    outcome_list?: StringNullableListFilter
    overall_status?: StringNullableListFilter
    participant_flow?: StringNullableListFilter
    phase?: StringNullableListFilter
    phone?: StringNullableListFilter
    phone_ext?: StringNullableListFilter
    point_of_contact?: StringNullableListFilter
    primary_completion_date?: StringNullableListFilter
    primary_purpose?: StringNullableListFilter
    provided_document?: StringNullableListFilter
    reported_events?: StringNullableListFilter
    responsible_party_type?: StringNullableListFilter
    results_first_posted?: StringNullableListFilter
    results_first_submitted?: StringNullableListFilter
    results_first_submitted_qc?: StringNullableListFilter
    role?: StringNullableListFilter
    sampling_method?: StringNullableListFilter
    secondary_id?: StringNullableListFilter
    sharing_ipd?: StringNullableListFilter
    source?: StringNullableListFilter
    start_date?: StringNullableListFilter
    status?: StringNullableListFilter
    study_doc?: StringNullableListFilter
    study_first_posted?: StringNullableListFilter
    study_first_submitted?: StringNullableListFilter
    study_first_submitted_qc?: StringNullableListFilter
    study_pop?: StringNullableListFilter
    study_type?: StringNullableListFilter
    target_duration?: StringNullableListFilter
    textblock?: StringNullableListFilter
    time_frame?: StringNullableListFilter
    time_perspective?: StringNullableListFilter
    type?: StringNullableListFilter
    url?: StringNullableListFilter
    verification_date?: StringNullableListFilter
    why_stopped?: StringNullableListFilter
  }

  export type trialsOrderByWithRelationInput = {
    id?: SortOrder
    nct_id?: SortOrder
    PMID?: SortOrder
    acronym?: SortOrder
    affiliation?: SortOrder
    allocation?: SortOrder
    arm_group_label?: SortOrder
    arm_group_type?: SortOrder
    baseline?: SortOrder
    brief_title?: SortOrder
    certain_agreements?: SortOrder
    citation?: SortOrder
    collaborator?: SortOrder
    completion_date?: SortOrder
    condition?: SortOrder
    contact?: SortOrder
    contact_backup?: SortOrder
    country?: SortOrder
    criteria?: SortOrder
    description?: SortOrder
    disposition_first_posted?: SortOrder
    disposition_first_submitted?: SortOrder
    disposition_first_submitted_qc?: SortOrder
    download_date?: SortOrder
    email?: SortOrder
    enrollment?: SortOrder
    facility?: SortOrder
    gender?: SortOrder
    gender_based?: SortOrder
    gender_description?: SortOrder
    has_dmc?: SortOrder
    has_expanded_access?: SortOrder
    healthy_volunteers?: SortOrder
    intervention_model?: SortOrder
    intervention_model_description?: SortOrder
    intervention_name?: SortOrder
    intervention_type?: SortOrder
    investigator?: SortOrder
    investigator_affiliation?: SortOrder
    investigator_full_name?: SortOrder
    investigator_title?: SortOrder
    ipd_access_criteria?: SortOrder
    ipd_description?: SortOrder
    ipd_info_type?: SortOrder
    ipd_time_frame?: SortOrder
    ipd_url?: SortOrder
    is_fda_regulated_device?: SortOrder
    is_fda_regulated_drug?: SortOrder
    is_us_export?: SortOrder
    keyword?: SortOrder
    last_known_status?: SortOrder
    last_name?: SortOrder
    last_update_posted?: SortOrder
    last_update_submitted?: SortOrder
    last_update_submitted_qc?: SortOrder
    lead_sponsor?: SortOrder
    limitations_and_caveats?: SortOrder
    link_text?: SortOrder
    masking?: SortOrder
    masking_description?: SortOrder
    maximum_age?: SortOrder
    measure?: SortOrder
    mesh_term?: SortOrder
    minimum_age?: SortOrder
    name_title?: SortOrder
    number_of_arms?: SortOrder
    number_of_groups?: SortOrder
    observational_model?: SortOrder
    official_title?: SortOrder
    org_study_id?: SortOrder
    organization?: SortOrder
    other_name?: SortOrder
    outcome_list?: SortOrder
    overall_status?: SortOrder
    participant_flow?: SortOrder
    phase?: SortOrder
    phone?: SortOrder
    phone_ext?: SortOrder
    point_of_contact?: SortOrder
    primary_completion_date?: SortOrder
    primary_purpose?: SortOrder
    provided_document?: SortOrder
    reported_events?: SortOrder
    responsible_party_type?: SortOrder
    results_first_posted?: SortOrder
    results_first_submitted?: SortOrder
    results_first_submitted_qc?: SortOrder
    role?: SortOrder
    sampling_method?: SortOrder
    secondary_id?: SortOrder
    sharing_ipd?: SortOrder
    source?: SortOrder
    start_date?: SortOrder
    status?: SortOrder
    study_doc?: SortOrder
    study_first_posted?: SortOrder
    study_first_submitted?: SortOrder
    study_first_submitted_qc?: SortOrder
    study_pop?: SortOrder
    study_type?: SortOrder
    target_duration?: SortOrder
    textblock?: SortOrder
    time_frame?: SortOrder
    time_perspective?: SortOrder
    type?: SortOrder
    url?: SortOrder
    verification_date?: SortOrder
    why_stopped?: SortOrder
  }

  export type trialsWhereUniqueInput = {
    id?: string
    nct_id?: string
  }

  export type trialsOrderByWithAggregationInput = {
    id?: SortOrder
    nct_id?: SortOrder
    PMID?: SortOrder
    acronym?: SortOrder
    affiliation?: SortOrder
    allocation?: SortOrder
    arm_group_label?: SortOrder
    arm_group_type?: SortOrder
    baseline?: SortOrder
    brief_title?: SortOrder
    certain_agreements?: SortOrder
    citation?: SortOrder
    collaborator?: SortOrder
    completion_date?: SortOrder
    condition?: SortOrder
    contact?: SortOrder
    contact_backup?: SortOrder
    country?: SortOrder
    criteria?: SortOrder
    description?: SortOrder
    disposition_first_posted?: SortOrder
    disposition_first_submitted?: SortOrder
    disposition_first_submitted_qc?: SortOrder
    download_date?: SortOrder
    email?: SortOrder
    enrollment?: SortOrder
    facility?: SortOrder
    gender?: SortOrder
    gender_based?: SortOrder
    gender_description?: SortOrder
    has_dmc?: SortOrder
    has_expanded_access?: SortOrder
    healthy_volunteers?: SortOrder
    intervention_model?: SortOrder
    intervention_model_description?: SortOrder
    intervention_name?: SortOrder
    intervention_type?: SortOrder
    investigator?: SortOrder
    investigator_affiliation?: SortOrder
    investigator_full_name?: SortOrder
    investigator_title?: SortOrder
    ipd_access_criteria?: SortOrder
    ipd_description?: SortOrder
    ipd_info_type?: SortOrder
    ipd_time_frame?: SortOrder
    ipd_url?: SortOrder
    is_fda_regulated_device?: SortOrder
    is_fda_regulated_drug?: SortOrder
    is_us_export?: SortOrder
    keyword?: SortOrder
    last_known_status?: SortOrder
    last_name?: SortOrder
    last_update_posted?: SortOrder
    last_update_submitted?: SortOrder
    last_update_submitted_qc?: SortOrder
    lead_sponsor?: SortOrder
    limitations_and_caveats?: SortOrder
    link_text?: SortOrder
    masking?: SortOrder
    masking_description?: SortOrder
    maximum_age?: SortOrder
    measure?: SortOrder
    mesh_term?: SortOrder
    minimum_age?: SortOrder
    name_title?: SortOrder
    number_of_arms?: SortOrder
    number_of_groups?: SortOrder
    observational_model?: SortOrder
    official_title?: SortOrder
    org_study_id?: SortOrder
    organization?: SortOrder
    other_name?: SortOrder
    outcome_list?: SortOrder
    overall_status?: SortOrder
    participant_flow?: SortOrder
    phase?: SortOrder
    phone?: SortOrder
    phone_ext?: SortOrder
    point_of_contact?: SortOrder
    primary_completion_date?: SortOrder
    primary_purpose?: SortOrder
    provided_document?: SortOrder
    reported_events?: SortOrder
    responsible_party_type?: SortOrder
    results_first_posted?: SortOrder
    results_first_submitted?: SortOrder
    results_first_submitted_qc?: SortOrder
    role?: SortOrder
    sampling_method?: SortOrder
    secondary_id?: SortOrder
    sharing_ipd?: SortOrder
    source?: SortOrder
    start_date?: SortOrder
    status?: SortOrder
    study_doc?: SortOrder
    study_first_posted?: SortOrder
    study_first_submitted?: SortOrder
    study_first_submitted_qc?: SortOrder
    study_pop?: SortOrder
    study_type?: SortOrder
    target_duration?: SortOrder
    textblock?: SortOrder
    time_frame?: SortOrder
    time_perspective?: SortOrder
    type?: SortOrder
    url?: SortOrder
    verification_date?: SortOrder
    why_stopped?: SortOrder
    _count?: trialsCountOrderByAggregateInput
    _max?: trialsMaxOrderByAggregateInput
    _min?: trialsMinOrderByAggregateInput
  }

  export type trialsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<trialsScalarWhereWithAggregatesInput>
    OR?: Enumerable<trialsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<trialsScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    nct_id?: StringWithAggregatesFilter | string
    PMID?: StringNullableListFilter
    acronym?: StringNullableListFilter
    affiliation?: StringNullableListFilter
    allocation?: StringNullableListFilter
    arm_group_label?: StringNullableListFilter
    arm_group_type?: StringNullableListFilter
    baseline?: StringNullableListFilter
    brief_title?: StringNullableListFilter
    certain_agreements?: StringNullableListFilter
    citation?: StringNullableListFilter
    collaborator?: StringNullableListFilter
    completion_date?: StringNullableListFilter
    condition?: StringNullableListFilter
    contact?: StringNullableListFilter
    contact_backup?: StringNullableListFilter
    country?: StringNullableListFilter
    criteria?: StringNullableListFilter
    description?: StringNullableListFilter
    disposition_first_posted?: StringNullableListFilter
    disposition_first_submitted?: StringNullableListFilter
    disposition_first_submitted_qc?: StringNullableListFilter
    download_date?: StringNullableListFilter
    email?: StringNullableListFilter
    enrollment?: StringNullableListFilter
    facility?: StringNullableListFilter
    gender?: StringNullableListFilter
    gender_based?: StringNullableListFilter
    gender_description?: StringNullableListFilter
    has_dmc?: StringNullableListFilter
    has_expanded_access?: StringNullableListFilter
    healthy_volunteers?: StringNullableListFilter
    intervention_model?: StringNullableListFilter
    intervention_model_description?: StringNullableListFilter
    intervention_name?: StringNullableListFilter
    intervention_type?: StringNullableListFilter
    investigator?: StringNullableListFilter
    investigator_affiliation?: StringNullableListFilter
    investigator_full_name?: StringNullableListFilter
    investigator_title?: StringNullableListFilter
    ipd_access_criteria?: StringNullableListFilter
    ipd_description?: StringNullableListFilter
    ipd_info_type?: StringNullableListFilter
    ipd_time_frame?: StringNullableListFilter
    ipd_url?: StringNullableListFilter
    is_fda_regulated_device?: StringNullableListFilter
    is_fda_regulated_drug?: StringNullableListFilter
    is_us_export?: StringNullableListFilter
    keyword?: StringNullableListFilter
    last_known_status?: StringNullableListFilter
    last_name?: StringNullableListFilter
    last_update_posted?: StringNullableListFilter
    last_update_submitted?: StringNullableListFilter
    last_update_submitted_qc?: StringNullableListFilter
    lead_sponsor?: StringNullableListFilter
    limitations_and_caveats?: StringNullableListFilter
    link_text?: StringNullableListFilter
    masking?: StringNullableListFilter
    masking_description?: StringNullableListFilter
    maximum_age?: StringNullableListFilter
    measure?: StringNullableListFilter
    mesh_term?: StringNullableListFilter
    minimum_age?: StringNullableListFilter
    name_title?: StringNullableListFilter
    number_of_arms?: StringNullableListFilter
    number_of_groups?: StringNullableListFilter
    observational_model?: StringNullableListFilter
    official_title?: StringNullableListFilter
    org_study_id?: StringNullableListFilter
    organization?: StringNullableListFilter
    other_name?: StringNullableListFilter
    outcome_list?: StringNullableListFilter
    overall_status?: StringNullableListFilter
    participant_flow?: StringNullableListFilter
    phase?: StringNullableListFilter
    phone?: StringNullableListFilter
    phone_ext?: StringNullableListFilter
    point_of_contact?: StringNullableListFilter
    primary_completion_date?: StringNullableListFilter
    primary_purpose?: StringNullableListFilter
    provided_document?: StringNullableListFilter
    reported_events?: StringNullableListFilter
    responsible_party_type?: StringNullableListFilter
    results_first_posted?: StringNullableListFilter
    results_first_submitted?: StringNullableListFilter
    results_first_submitted_qc?: StringNullableListFilter
    role?: StringNullableListFilter
    sampling_method?: StringNullableListFilter
    secondary_id?: StringNullableListFilter
    sharing_ipd?: StringNullableListFilter
    source?: StringNullableListFilter
    start_date?: StringNullableListFilter
    status?: StringNullableListFilter
    study_doc?: StringNullableListFilter
    study_first_posted?: StringNullableListFilter
    study_first_submitted?: StringNullableListFilter
    study_first_submitted_qc?: StringNullableListFilter
    study_pop?: StringNullableListFilter
    study_type?: StringNullableListFilter
    target_duration?: StringNullableListFilter
    textblock?: StringNullableListFilter
    time_frame?: StringNullableListFilter
    time_perspective?: StringNullableListFilter
    type?: StringNullableListFilter
    url?: StringNullableListFilter
    verification_date?: StringNullableListFilter
    why_stopped?: StringNullableListFilter
  }

  export type trialsCreateInput = {
    id?: string
    nct_id: string
    PMID?: trialsCreatePMIDInput | Enumerable<string>
    acronym?: trialsCreateacronymInput | Enumerable<string>
    affiliation?: trialsCreateaffiliationInput | Enumerable<string>
    allocation?: trialsCreateallocationInput | Enumerable<string>
    arm_group_label?: trialsCreatearm_group_labelInput | Enumerable<string>
    arm_group_type?: trialsCreatearm_group_typeInput | Enumerable<string>
    baseline?: trialsCreatebaselineInput | Enumerable<string>
    brief_title?: trialsCreatebrief_titleInput | Enumerable<string>
    certain_agreements?: trialsCreatecertain_agreementsInput | Enumerable<string>
    citation?: trialsCreatecitationInput | Enumerable<string>
    collaborator?: trialsCreatecollaboratorInput | Enumerable<string>
    completion_date?: trialsCreatecompletion_dateInput | Enumerable<string>
    condition?: trialsCreateconditionInput | Enumerable<string>
    contact?: trialsCreatecontactInput | Enumerable<string>
    contact_backup?: trialsCreatecontact_backupInput | Enumerable<string>
    country?: trialsCreatecountryInput | Enumerable<string>
    criteria?: trialsCreatecriteriaInput | Enumerable<string>
    description?: trialsCreatedescriptionInput | Enumerable<string>
    disposition_first_posted?: trialsCreatedisposition_first_postedInput | Enumerable<string>
    disposition_first_submitted?: trialsCreatedisposition_first_submittedInput | Enumerable<string>
    disposition_first_submitted_qc?: trialsCreatedisposition_first_submitted_qcInput | Enumerable<string>
    download_date?: trialsCreatedownload_dateInput | Enumerable<string>
    email?: trialsCreateemailInput | Enumerable<string>
    enrollment?: trialsCreateenrollmentInput | Enumerable<string>
    facility?: trialsCreatefacilityInput | Enumerable<string>
    gender?: trialsCreategenderInput | Enumerable<string>
    gender_based?: trialsCreategender_basedInput | Enumerable<string>
    gender_description?: trialsCreategender_descriptionInput | Enumerable<string>
    has_dmc?: trialsCreatehas_dmcInput | Enumerable<string>
    has_expanded_access?: trialsCreatehas_expanded_accessInput | Enumerable<string>
    healthy_volunteers?: trialsCreatehealthy_volunteersInput | Enumerable<string>
    intervention_model?: trialsCreateintervention_modelInput | Enumerable<string>
    intervention_model_description?: trialsCreateintervention_model_descriptionInput | Enumerable<string>
    intervention_name?: trialsCreateintervention_nameInput | Enumerable<string>
    intervention_type?: trialsCreateintervention_typeInput | Enumerable<string>
    investigator?: trialsCreateinvestigatorInput | Enumerable<string>
    investigator_affiliation?: trialsCreateinvestigator_affiliationInput | Enumerable<string>
    investigator_full_name?: trialsCreateinvestigator_full_nameInput | Enumerable<string>
    investigator_title?: trialsCreateinvestigator_titleInput | Enumerable<string>
    ipd_access_criteria?: trialsCreateipd_access_criteriaInput | Enumerable<string>
    ipd_description?: trialsCreateipd_descriptionInput | Enumerable<string>
    ipd_info_type?: trialsCreateipd_info_typeInput | Enumerable<string>
    ipd_time_frame?: trialsCreateipd_time_frameInput | Enumerable<string>
    ipd_url?: trialsCreateipd_urlInput | Enumerable<string>
    is_fda_regulated_device?: trialsCreateis_fda_regulated_deviceInput | Enumerable<string>
    is_fda_regulated_drug?: trialsCreateis_fda_regulated_drugInput | Enumerable<string>
    is_us_export?: trialsCreateis_us_exportInput | Enumerable<string>
    keyword?: trialsCreatekeywordInput | Enumerable<string>
    last_known_status?: trialsCreatelast_known_statusInput | Enumerable<string>
    last_name?: trialsCreatelast_nameInput | Enumerable<string>
    last_update_posted?: trialsCreatelast_update_postedInput | Enumerable<string>
    last_update_submitted?: trialsCreatelast_update_submittedInput | Enumerable<string>
    last_update_submitted_qc?: trialsCreatelast_update_submitted_qcInput | Enumerable<string>
    lead_sponsor?: trialsCreatelead_sponsorInput | Enumerable<string>
    limitations_and_caveats?: trialsCreatelimitations_and_caveatsInput | Enumerable<string>
    link_text?: trialsCreatelink_textInput | Enumerable<string>
    masking?: trialsCreatemaskingInput | Enumerable<string>
    masking_description?: trialsCreatemasking_descriptionInput | Enumerable<string>
    maximum_age?: trialsCreatemaximum_ageInput | Enumerable<string>
    measure?: trialsCreatemeasureInput | Enumerable<string>
    mesh_term?: trialsCreatemesh_termInput | Enumerable<string>
    minimum_age?: trialsCreateminimum_ageInput | Enumerable<string>
    name_title?: trialsCreatename_titleInput | Enumerable<string>
    number_of_arms?: trialsCreatenumber_of_armsInput | Enumerable<string>
    number_of_groups?: trialsCreatenumber_of_groupsInput | Enumerable<string>
    observational_model?: trialsCreateobservational_modelInput | Enumerable<string>
    official_title?: trialsCreateofficial_titleInput | Enumerable<string>
    org_study_id?: trialsCreateorg_study_idInput | Enumerable<string>
    organization?: trialsCreateorganizationInput | Enumerable<string>
    other_name?: trialsCreateother_nameInput | Enumerable<string>
    outcome_list?: trialsCreateoutcome_listInput | Enumerable<string>
    overall_status?: trialsCreateoverall_statusInput | Enumerable<string>
    participant_flow?: trialsCreateparticipant_flowInput | Enumerable<string>
    phase?: trialsCreatephaseInput | Enumerable<string>
    phone?: trialsCreatephoneInput | Enumerable<string>
    phone_ext?: trialsCreatephone_extInput | Enumerable<string>
    point_of_contact?: trialsCreatepoint_of_contactInput | Enumerable<string>
    primary_completion_date?: trialsCreateprimary_completion_dateInput | Enumerable<string>
    primary_purpose?: trialsCreateprimary_purposeInput | Enumerable<string>
    provided_document?: trialsCreateprovided_documentInput | Enumerable<string>
    reported_events?: trialsCreatereported_eventsInput | Enumerable<string>
    responsible_party_type?: trialsCreateresponsible_party_typeInput | Enumerable<string>
    results_first_posted?: trialsCreateresults_first_postedInput | Enumerable<string>
    results_first_submitted?: trialsCreateresults_first_submittedInput | Enumerable<string>
    results_first_submitted_qc?: trialsCreateresults_first_submitted_qcInput | Enumerable<string>
    role?: trialsCreateroleInput | Enumerable<string>
    sampling_method?: trialsCreatesampling_methodInput | Enumerable<string>
    secondary_id?: trialsCreatesecondary_idInput | Enumerable<string>
    sharing_ipd?: trialsCreatesharing_ipdInput | Enumerable<string>
    source?: trialsCreatesourceInput | Enumerable<string>
    start_date?: trialsCreatestart_dateInput | Enumerable<string>
    status?: trialsCreatestatusInput | Enumerable<string>
    study_doc?: trialsCreatestudy_docInput | Enumerable<string>
    study_first_posted?: trialsCreatestudy_first_postedInput | Enumerable<string>
    study_first_submitted?: trialsCreatestudy_first_submittedInput | Enumerable<string>
    study_first_submitted_qc?: trialsCreatestudy_first_submitted_qcInput | Enumerable<string>
    study_pop?: trialsCreatestudy_popInput | Enumerable<string>
    study_type?: trialsCreatestudy_typeInput | Enumerable<string>
    target_duration?: trialsCreatetarget_durationInput | Enumerable<string>
    textblock?: trialsCreatetextblockInput | Enumerable<string>
    time_frame?: trialsCreatetime_frameInput | Enumerable<string>
    time_perspective?: trialsCreatetime_perspectiveInput | Enumerable<string>
    type?: trialsCreatetypeInput | Enumerable<string>
    url?: trialsCreateurlInput | Enumerable<string>
    verification_date?: trialsCreateverification_dateInput | Enumerable<string>
    why_stopped?: trialsCreatewhy_stoppedInput | Enumerable<string>
  }

  export type trialsUncheckedCreateInput = {
    id?: string
    nct_id: string
    PMID?: trialsCreatePMIDInput | Enumerable<string>
    acronym?: trialsCreateacronymInput | Enumerable<string>
    affiliation?: trialsCreateaffiliationInput | Enumerable<string>
    allocation?: trialsCreateallocationInput | Enumerable<string>
    arm_group_label?: trialsCreatearm_group_labelInput | Enumerable<string>
    arm_group_type?: trialsCreatearm_group_typeInput | Enumerable<string>
    baseline?: trialsCreatebaselineInput | Enumerable<string>
    brief_title?: trialsCreatebrief_titleInput | Enumerable<string>
    certain_agreements?: trialsCreatecertain_agreementsInput | Enumerable<string>
    citation?: trialsCreatecitationInput | Enumerable<string>
    collaborator?: trialsCreatecollaboratorInput | Enumerable<string>
    completion_date?: trialsCreatecompletion_dateInput | Enumerable<string>
    condition?: trialsCreateconditionInput | Enumerable<string>
    contact?: trialsCreatecontactInput | Enumerable<string>
    contact_backup?: trialsCreatecontact_backupInput | Enumerable<string>
    country?: trialsCreatecountryInput | Enumerable<string>
    criteria?: trialsCreatecriteriaInput | Enumerable<string>
    description?: trialsCreatedescriptionInput | Enumerable<string>
    disposition_first_posted?: trialsCreatedisposition_first_postedInput | Enumerable<string>
    disposition_first_submitted?: trialsCreatedisposition_first_submittedInput | Enumerable<string>
    disposition_first_submitted_qc?: trialsCreatedisposition_first_submitted_qcInput | Enumerable<string>
    download_date?: trialsCreatedownload_dateInput | Enumerable<string>
    email?: trialsCreateemailInput | Enumerable<string>
    enrollment?: trialsCreateenrollmentInput | Enumerable<string>
    facility?: trialsCreatefacilityInput | Enumerable<string>
    gender?: trialsCreategenderInput | Enumerable<string>
    gender_based?: trialsCreategender_basedInput | Enumerable<string>
    gender_description?: trialsCreategender_descriptionInput | Enumerable<string>
    has_dmc?: trialsCreatehas_dmcInput | Enumerable<string>
    has_expanded_access?: trialsCreatehas_expanded_accessInput | Enumerable<string>
    healthy_volunteers?: trialsCreatehealthy_volunteersInput | Enumerable<string>
    intervention_model?: trialsCreateintervention_modelInput | Enumerable<string>
    intervention_model_description?: trialsCreateintervention_model_descriptionInput | Enumerable<string>
    intervention_name?: trialsCreateintervention_nameInput | Enumerable<string>
    intervention_type?: trialsCreateintervention_typeInput | Enumerable<string>
    investigator?: trialsCreateinvestigatorInput | Enumerable<string>
    investigator_affiliation?: trialsCreateinvestigator_affiliationInput | Enumerable<string>
    investigator_full_name?: trialsCreateinvestigator_full_nameInput | Enumerable<string>
    investigator_title?: trialsCreateinvestigator_titleInput | Enumerable<string>
    ipd_access_criteria?: trialsCreateipd_access_criteriaInput | Enumerable<string>
    ipd_description?: trialsCreateipd_descriptionInput | Enumerable<string>
    ipd_info_type?: trialsCreateipd_info_typeInput | Enumerable<string>
    ipd_time_frame?: trialsCreateipd_time_frameInput | Enumerable<string>
    ipd_url?: trialsCreateipd_urlInput | Enumerable<string>
    is_fda_regulated_device?: trialsCreateis_fda_regulated_deviceInput | Enumerable<string>
    is_fda_regulated_drug?: trialsCreateis_fda_regulated_drugInput | Enumerable<string>
    is_us_export?: trialsCreateis_us_exportInput | Enumerable<string>
    keyword?: trialsCreatekeywordInput | Enumerable<string>
    last_known_status?: trialsCreatelast_known_statusInput | Enumerable<string>
    last_name?: trialsCreatelast_nameInput | Enumerable<string>
    last_update_posted?: trialsCreatelast_update_postedInput | Enumerable<string>
    last_update_submitted?: trialsCreatelast_update_submittedInput | Enumerable<string>
    last_update_submitted_qc?: trialsCreatelast_update_submitted_qcInput | Enumerable<string>
    lead_sponsor?: trialsCreatelead_sponsorInput | Enumerable<string>
    limitations_and_caveats?: trialsCreatelimitations_and_caveatsInput | Enumerable<string>
    link_text?: trialsCreatelink_textInput | Enumerable<string>
    masking?: trialsCreatemaskingInput | Enumerable<string>
    masking_description?: trialsCreatemasking_descriptionInput | Enumerable<string>
    maximum_age?: trialsCreatemaximum_ageInput | Enumerable<string>
    measure?: trialsCreatemeasureInput | Enumerable<string>
    mesh_term?: trialsCreatemesh_termInput | Enumerable<string>
    minimum_age?: trialsCreateminimum_ageInput | Enumerable<string>
    name_title?: trialsCreatename_titleInput | Enumerable<string>
    number_of_arms?: trialsCreatenumber_of_armsInput | Enumerable<string>
    number_of_groups?: trialsCreatenumber_of_groupsInput | Enumerable<string>
    observational_model?: trialsCreateobservational_modelInput | Enumerable<string>
    official_title?: trialsCreateofficial_titleInput | Enumerable<string>
    org_study_id?: trialsCreateorg_study_idInput | Enumerable<string>
    organization?: trialsCreateorganizationInput | Enumerable<string>
    other_name?: trialsCreateother_nameInput | Enumerable<string>
    outcome_list?: trialsCreateoutcome_listInput | Enumerable<string>
    overall_status?: trialsCreateoverall_statusInput | Enumerable<string>
    participant_flow?: trialsCreateparticipant_flowInput | Enumerable<string>
    phase?: trialsCreatephaseInput | Enumerable<string>
    phone?: trialsCreatephoneInput | Enumerable<string>
    phone_ext?: trialsCreatephone_extInput | Enumerable<string>
    point_of_contact?: trialsCreatepoint_of_contactInput | Enumerable<string>
    primary_completion_date?: trialsCreateprimary_completion_dateInput | Enumerable<string>
    primary_purpose?: trialsCreateprimary_purposeInput | Enumerable<string>
    provided_document?: trialsCreateprovided_documentInput | Enumerable<string>
    reported_events?: trialsCreatereported_eventsInput | Enumerable<string>
    responsible_party_type?: trialsCreateresponsible_party_typeInput | Enumerable<string>
    results_first_posted?: trialsCreateresults_first_postedInput | Enumerable<string>
    results_first_submitted?: trialsCreateresults_first_submittedInput | Enumerable<string>
    results_first_submitted_qc?: trialsCreateresults_first_submitted_qcInput | Enumerable<string>
    role?: trialsCreateroleInput | Enumerable<string>
    sampling_method?: trialsCreatesampling_methodInput | Enumerable<string>
    secondary_id?: trialsCreatesecondary_idInput | Enumerable<string>
    sharing_ipd?: trialsCreatesharing_ipdInput | Enumerable<string>
    source?: trialsCreatesourceInput | Enumerable<string>
    start_date?: trialsCreatestart_dateInput | Enumerable<string>
    status?: trialsCreatestatusInput | Enumerable<string>
    study_doc?: trialsCreatestudy_docInput | Enumerable<string>
    study_first_posted?: trialsCreatestudy_first_postedInput | Enumerable<string>
    study_first_submitted?: trialsCreatestudy_first_submittedInput | Enumerable<string>
    study_first_submitted_qc?: trialsCreatestudy_first_submitted_qcInput | Enumerable<string>
    study_pop?: trialsCreatestudy_popInput | Enumerable<string>
    study_type?: trialsCreatestudy_typeInput | Enumerable<string>
    target_duration?: trialsCreatetarget_durationInput | Enumerable<string>
    textblock?: trialsCreatetextblockInput | Enumerable<string>
    time_frame?: trialsCreatetime_frameInput | Enumerable<string>
    time_perspective?: trialsCreatetime_perspectiveInput | Enumerable<string>
    type?: trialsCreatetypeInput | Enumerable<string>
    url?: trialsCreateurlInput | Enumerable<string>
    verification_date?: trialsCreateverification_dateInput | Enumerable<string>
    why_stopped?: trialsCreatewhy_stoppedInput | Enumerable<string>
  }

  export type trialsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nct_id?: StringFieldUpdateOperationsInput | string
    PMID?: trialsUpdatePMIDInput | Enumerable<string>
    acronym?: trialsUpdateacronymInput | Enumerable<string>
    affiliation?: trialsUpdateaffiliationInput | Enumerable<string>
    allocation?: trialsUpdateallocationInput | Enumerable<string>
    arm_group_label?: trialsUpdatearm_group_labelInput | Enumerable<string>
    arm_group_type?: trialsUpdatearm_group_typeInput | Enumerable<string>
    baseline?: trialsUpdatebaselineInput | Enumerable<string>
    brief_title?: trialsUpdatebrief_titleInput | Enumerable<string>
    certain_agreements?: trialsUpdatecertain_agreementsInput | Enumerable<string>
    citation?: trialsUpdatecitationInput | Enumerable<string>
    collaborator?: trialsUpdatecollaboratorInput | Enumerable<string>
    completion_date?: trialsUpdatecompletion_dateInput | Enumerable<string>
    condition?: trialsUpdateconditionInput | Enumerable<string>
    contact?: trialsUpdatecontactInput | Enumerable<string>
    contact_backup?: trialsUpdatecontact_backupInput | Enumerable<string>
    country?: trialsUpdatecountryInput | Enumerable<string>
    criteria?: trialsUpdatecriteriaInput | Enumerable<string>
    description?: trialsUpdatedescriptionInput | Enumerable<string>
    disposition_first_posted?: trialsUpdatedisposition_first_postedInput | Enumerable<string>
    disposition_first_submitted?: trialsUpdatedisposition_first_submittedInput | Enumerable<string>
    disposition_first_submitted_qc?: trialsUpdatedisposition_first_submitted_qcInput | Enumerable<string>
    download_date?: trialsUpdatedownload_dateInput | Enumerable<string>
    email?: trialsUpdateemailInput | Enumerable<string>
    enrollment?: trialsUpdateenrollmentInput | Enumerable<string>
    facility?: trialsUpdatefacilityInput | Enumerable<string>
    gender?: trialsUpdategenderInput | Enumerable<string>
    gender_based?: trialsUpdategender_basedInput | Enumerable<string>
    gender_description?: trialsUpdategender_descriptionInput | Enumerable<string>
    has_dmc?: trialsUpdatehas_dmcInput | Enumerable<string>
    has_expanded_access?: trialsUpdatehas_expanded_accessInput | Enumerable<string>
    healthy_volunteers?: trialsUpdatehealthy_volunteersInput | Enumerable<string>
    intervention_model?: trialsUpdateintervention_modelInput | Enumerable<string>
    intervention_model_description?: trialsUpdateintervention_model_descriptionInput | Enumerable<string>
    intervention_name?: trialsUpdateintervention_nameInput | Enumerable<string>
    intervention_type?: trialsUpdateintervention_typeInput | Enumerable<string>
    investigator?: trialsUpdateinvestigatorInput | Enumerable<string>
    investigator_affiliation?: trialsUpdateinvestigator_affiliationInput | Enumerable<string>
    investigator_full_name?: trialsUpdateinvestigator_full_nameInput | Enumerable<string>
    investigator_title?: trialsUpdateinvestigator_titleInput | Enumerable<string>
    ipd_access_criteria?: trialsUpdateipd_access_criteriaInput | Enumerable<string>
    ipd_description?: trialsUpdateipd_descriptionInput | Enumerable<string>
    ipd_info_type?: trialsUpdateipd_info_typeInput | Enumerable<string>
    ipd_time_frame?: trialsUpdateipd_time_frameInput | Enumerable<string>
    ipd_url?: trialsUpdateipd_urlInput | Enumerable<string>
    is_fda_regulated_device?: trialsUpdateis_fda_regulated_deviceInput | Enumerable<string>
    is_fda_regulated_drug?: trialsUpdateis_fda_regulated_drugInput | Enumerable<string>
    is_us_export?: trialsUpdateis_us_exportInput | Enumerable<string>
    keyword?: trialsUpdatekeywordInput | Enumerable<string>
    last_known_status?: trialsUpdatelast_known_statusInput | Enumerable<string>
    last_name?: trialsUpdatelast_nameInput | Enumerable<string>
    last_update_posted?: trialsUpdatelast_update_postedInput | Enumerable<string>
    last_update_submitted?: trialsUpdatelast_update_submittedInput | Enumerable<string>
    last_update_submitted_qc?: trialsUpdatelast_update_submitted_qcInput | Enumerable<string>
    lead_sponsor?: trialsUpdatelead_sponsorInput | Enumerable<string>
    limitations_and_caveats?: trialsUpdatelimitations_and_caveatsInput | Enumerable<string>
    link_text?: trialsUpdatelink_textInput | Enumerable<string>
    masking?: trialsUpdatemaskingInput | Enumerable<string>
    masking_description?: trialsUpdatemasking_descriptionInput | Enumerable<string>
    maximum_age?: trialsUpdatemaximum_ageInput | Enumerable<string>
    measure?: trialsUpdatemeasureInput | Enumerable<string>
    mesh_term?: trialsUpdatemesh_termInput | Enumerable<string>
    minimum_age?: trialsUpdateminimum_ageInput | Enumerable<string>
    name_title?: trialsUpdatename_titleInput | Enumerable<string>
    number_of_arms?: trialsUpdatenumber_of_armsInput | Enumerable<string>
    number_of_groups?: trialsUpdatenumber_of_groupsInput | Enumerable<string>
    observational_model?: trialsUpdateobservational_modelInput | Enumerable<string>
    official_title?: trialsUpdateofficial_titleInput | Enumerable<string>
    org_study_id?: trialsUpdateorg_study_idInput | Enumerable<string>
    organization?: trialsUpdateorganizationInput | Enumerable<string>
    other_name?: trialsUpdateother_nameInput | Enumerable<string>
    outcome_list?: trialsUpdateoutcome_listInput | Enumerable<string>
    overall_status?: trialsUpdateoverall_statusInput | Enumerable<string>
    participant_flow?: trialsUpdateparticipant_flowInput | Enumerable<string>
    phase?: trialsUpdatephaseInput | Enumerable<string>
    phone?: trialsUpdatephoneInput | Enumerable<string>
    phone_ext?: trialsUpdatephone_extInput | Enumerable<string>
    point_of_contact?: trialsUpdatepoint_of_contactInput | Enumerable<string>
    primary_completion_date?: trialsUpdateprimary_completion_dateInput | Enumerable<string>
    primary_purpose?: trialsUpdateprimary_purposeInput | Enumerable<string>
    provided_document?: trialsUpdateprovided_documentInput | Enumerable<string>
    reported_events?: trialsUpdatereported_eventsInput | Enumerable<string>
    responsible_party_type?: trialsUpdateresponsible_party_typeInput | Enumerable<string>
    results_first_posted?: trialsUpdateresults_first_postedInput | Enumerable<string>
    results_first_submitted?: trialsUpdateresults_first_submittedInput | Enumerable<string>
    results_first_submitted_qc?: trialsUpdateresults_first_submitted_qcInput | Enumerable<string>
    role?: trialsUpdateroleInput | Enumerable<string>
    sampling_method?: trialsUpdatesampling_methodInput | Enumerable<string>
    secondary_id?: trialsUpdatesecondary_idInput | Enumerable<string>
    sharing_ipd?: trialsUpdatesharing_ipdInput | Enumerable<string>
    source?: trialsUpdatesourceInput | Enumerable<string>
    start_date?: trialsUpdatestart_dateInput | Enumerable<string>
    status?: trialsUpdatestatusInput | Enumerable<string>
    study_doc?: trialsUpdatestudy_docInput | Enumerable<string>
    study_first_posted?: trialsUpdatestudy_first_postedInput | Enumerable<string>
    study_first_submitted?: trialsUpdatestudy_first_submittedInput | Enumerable<string>
    study_first_submitted_qc?: trialsUpdatestudy_first_submitted_qcInput | Enumerable<string>
    study_pop?: trialsUpdatestudy_popInput | Enumerable<string>
    study_type?: trialsUpdatestudy_typeInput | Enumerable<string>
    target_duration?: trialsUpdatetarget_durationInput | Enumerable<string>
    textblock?: trialsUpdatetextblockInput | Enumerable<string>
    time_frame?: trialsUpdatetime_frameInput | Enumerable<string>
    time_perspective?: trialsUpdatetime_perspectiveInput | Enumerable<string>
    type?: trialsUpdatetypeInput | Enumerable<string>
    url?: trialsUpdateurlInput | Enumerable<string>
    verification_date?: trialsUpdateverification_dateInput | Enumerable<string>
    why_stopped?: trialsUpdatewhy_stoppedInput | Enumerable<string>
  }

  export type trialsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nct_id?: StringFieldUpdateOperationsInput | string
    PMID?: trialsUpdatePMIDInput | Enumerable<string>
    acronym?: trialsUpdateacronymInput | Enumerable<string>
    affiliation?: trialsUpdateaffiliationInput | Enumerable<string>
    allocation?: trialsUpdateallocationInput | Enumerable<string>
    arm_group_label?: trialsUpdatearm_group_labelInput | Enumerable<string>
    arm_group_type?: trialsUpdatearm_group_typeInput | Enumerable<string>
    baseline?: trialsUpdatebaselineInput | Enumerable<string>
    brief_title?: trialsUpdatebrief_titleInput | Enumerable<string>
    certain_agreements?: trialsUpdatecertain_agreementsInput | Enumerable<string>
    citation?: trialsUpdatecitationInput | Enumerable<string>
    collaborator?: trialsUpdatecollaboratorInput | Enumerable<string>
    completion_date?: trialsUpdatecompletion_dateInput | Enumerable<string>
    condition?: trialsUpdateconditionInput | Enumerable<string>
    contact?: trialsUpdatecontactInput | Enumerable<string>
    contact_backup?: trialsUpdatecontact_backupInput | Enumerable<string>
    country?: trialsUpdatecountryInput | Enumerable<string>
    criteria?: trialsUpdatecriteriaInput | Enumerable<string>
    description?: trialsUpdatedescriptionInput | Enumerable<string>
    disposition_first_posted?: trialsUpdatedisposition_first_postedInput | Enumerable<string>
    disposition_first_submitted?: trialsUpdatedisposition_first_submittedInput | Enumerable<string>
    disposition_first_submitted_qc?: trialsUpdatedisposition_first_submitted_qcInput | Enumerable<string>
    download_date?: trialsUpdatedownload_dateInput | Enumerable<string>
    email?: trialsUpdateemailInput | Enumerable<string>
    enrollment?: trialsUpdateenrollmentInput | Enumerable<string>
    facility?: trialsUpdatefacilityInput | Enumerable<string>
    gender?: trialsUpdategenderInput | Enumerable<string>
    gender_based?: trialsUpdategender_basedInput | Enumerable<string>
    gender_description?: trialsUpdategender_descriptionInput | Enumerable<string>
    has_dmc?: trialsUpdatehas_dmcInput | Enumerable<string>
    has_expanded_access?: trialsUpdatehas_expanded_accessInput | Enumerable<string>
    healthy_volunteers?: trialsUpdatehealthy_volunteersInput | Enumerable<string>
    intervention_model?: trialsUpdateintervention_modelInput | Enumerable<string>
    intervention_model_description?: trialsUpdateintervention_model_descriptionInput | Enumerable<string>
    intervention_name?: trialsUpdateintervention_nameInput | Enumerable<string>
    intervention_type?: trialsUpdateintervention_typeInput | Enumerable<string>
    investigator?: trialsUpdateinvestigatorInput | Enumerable<string>
    investigator_affiliation?: trialsUpdateinvestigator_affiliationInput | Enumerable<string>
    investigator_full_name?: trialsUpdateinvestigator_full_nameInput | Enumerable<string>
    investigator_title?: trialsUpdateinvestigator_titleInput | Enumerable<string>
    ipd_access_criteria?: trialsUpdateipd_access_criteriaInput | Enumerable<string>
    ipd_description?: trialsUpdateipd_descriptionInput | Enumerable<string>
    ipd_info_type?: trialsUpdateipd_info_typeInput | Enumerable<string>
    ipd_time_frame?: trialsUpdateipd_time_frameInput | Enumerable<string>
    ipd_url?: trialsUpdateipd_urlInput | Enumerable<string>
    is_fda_regulated_device?: trialsUpdateis_fda_regulated_deviceInput | Enumerable<string>
    is_fda_regulated_drug?: trialsUpdateis_fda_regulated_drugInput | Enumerable<string>
    is_us_export?: trialsUpdateis_us_exportInput | Enumerable<string>
    keyword?: trialsUpdatekeywordInput | Enumerable<string>
    last_known_status?: trialsUpdatelast_known_statusInput | Enumerable<string>
    last_name?: trialsUpdatelast_nameInput | Enumerable<string>
    last_update_posted?: trialsUpdatelast_update_postedInput | Enumerable<string>
    last_update_submitted?: trialsUpdatelast_update_submittedInput | Enumerable<string>
    last_update_submitted_qc?: trialsUpdatelast_update_submitted_qcInput | Enumerable<string>
    lead_sponsor?: trialsUpdatelead_sponsorInput | Enumerable<string>
    limitations_and_caveats?: trialsUpdatelimitations_and_caveatsInput | Enumerable<string>
    link_text?: trialsUpdatelink_textInput | Enumerable<string>
    masking?: trialsUpdatemaskingInput | Enumerable<string>
    masking_description?: trialsUpdatemasking_descriptionInput | Enumerable<string>
    maximum_age?: trialsUpdatemaximum_ageInput | Enumerable<string>
    measure?: trialsUpdatemeasureInput | Enumerable<string>
    mesh_term?: trialsUpdatemesh_termInput | Enumerable<string>
    minimum_age?: trialsUpdateminimum_ageInput | Enumerable<string>
    name_title?: trialsUpdatename_titleInput | Enumerable<string>
    number_of_arms?: trialsUpdatenumber_of_armsInput | Enumerable<string>
    number_of_groups?: trialsUpdatenumber_of_groupsInput | Enumerable<string>
    observational_model?: trialsUpdateobservational_modelInput | Enumerable<string>
    official_title?: trialsUpdateofficial_titleInput | Enumerable<string>
    org_study_id?: trialsUpdateorg_study_idInput | Enumerable<string>
    organization?: trialsUpdateorganizationInput | Enumerable<string>
    other_name?: trialsUpdateother_nameInput | Enumerable<string>
    outcome_list?: trialsUpdateoutcome_listInput | Enumerable<string>
    overall_status?: trialsUpdateoverall_statusInput | Enumerable<string>
    participant_flow?: trialsUpdateparticipant_flowInput | Enumerable<string>
    phase?: trialsUpdatephaseInput | Enumerable<string>
    phone?: trialsUpdatephoneInput | Enumerable<string>
    phone_ext?: trialsUpdatephone_extInput | Enumerable<string>
    point_of_contact?: trialsUpdatepoint_of_contactInput | Enumerable<string>
    primary_completion_date?: trialsUpdateprimary_completion_dateInput | Enumerable<string>
    primary_purpose?: trialsUpdateprimary_purposeInput | Enumerable<string>
    provided_document?: trialsUpdateprovided_documentInput | Enumerable<string>
    reported_events?: trialsUpdatereported_eventsInput | Enumerable<string>
    responsible_party_type?: trialsUpdateresponsible_party_typeInput | Enumerable<string>
    results_first_posted?: trialsUpdateresults_first_postedInput | Enumerable<string>
    results_first_submitted?: trialsUpdateresults_first_submittedInput | Enumerable<string>
    results_first_submitted_qc?: trialsUpdateresults_first_submitted_qcInput | Enumerable<string>
    role?: trialsUpdateroleInput | Enumerable<string>
    sampling_method?: trialsUpdatesampling_methodInput | Enumerable<string>
    secondary_id?: trialsUpdatesecondary_idInput | Enumerable<string>
    sharing_ipd?: trialsUpdatesharing_ipdInput | Enumerable<string>
    source?: trialsUpdatesourceInput | Enumerable<string>
    start_date?: trialsUpdatestart_dateInput | Enumerable<string>
    status?: trialsUpdatestatusInput | Enumerable<string>
    study_doc?: trialsUpdatestudy_docInput | Enumerable<string>
    study_first_posted?: trialsUpdatestudy_first_postedInput | Enumerable<string>
    study_first_submitted?: trialsUpdatestudy_first_submittedInput | Enumerable<string>
    study_first_submitted_qc?: trialsUpdatestudy_first_submitted_qcInput | Enumerable<string>
    study_pop?: trialsUpdatestudy_popInput | Enumerable<string>
    study_type?: trialsUpdatestudy_typeInput | Enumerable<string>
    target_duration?: trialsUpdatetarget_durationInput | Enumerable<string>
    textblock?: trialsUpdatetextblockInput | Enumerable<string>
    time_frame?: trialsUpdatetime_frameInput | Enumerable<string>
    time_perspective?: trialsUpdatetime_perspectiveInput | Enumerable<string>
    type?: trialsUpdatetypeInput | Enumerable<string>
    url?: trialsUpdateurlInput | Enumerable<string>
    verification_date?: trialsUpdateverification_dateInput | Enumerable<string>
    why_stopped?: trialsUpdatewhy_stoppedInput | Enumerable<string>
  }

  export type trialsCreateManyInput = {
    id?: string
    nct_id: string
    PMID?: trialsCreatePMIDInput | Enumerable<string>
    acronym?: trialsCreateacronymInput | Enumerable<string>
    affiliation?: trialsCreateaffiliationInput | Enumerable<string>
    allocation?: trialsCreateallocationInput | Enumerable<string>
    arm_group_label?: trialsCreatearm_group_labelInput | Enumerable<string>
    arm_group_type?: trialsCreatearm_group_typeInput | Enumerable<string>
    baseline?: trialsCreatebaselineInput | Enumerable<string>
    brief_title?: trialsCreatebrief_titleInput | Enumerable<string>
    certain_agreements?: trialsCreatecertain_agreementsInput | Enumerable<string>
    citation?: trialsCreatecitationInput | Enumerable<string>
    collaborator?: trialsCreatecollaboratorInput | Enumerable<string>
    completion_date?: trialsCreatecompletion_dateInput | Enumerable<string>
    condition?: trialsCreateconditionInput | Enumerable<string>
    contact?: trialsCreatecontactInput | Enumerable<string>
    contact_backup?: trialsCreatecontact_backupInput | Enumerable<string>
    country?: trialsCreatecountryInput | Enumerable<string>
    criteria?: trialsCreatecriteriaInput | Enumerable<string>
    description?: trialsCreatedescriptionInput | Enumerable<string>
    disposition_first_posted?: trialsCreatedisposition_first_postedInput | Enumerable<string>
    disposition_first_submitted?: trialsCreatedisposition_first_submittedInput | Enumerable<string>
    disposition_first_submitted_qc?: trialsCreatedisposition_first_submitted_qcInput | Enumerable<string>
    download_date?: trialsCreatedownload_dateInput | Enumerable<string>
    email?: trialsCreateemailInput | Enumerable<string>
    enrollment?: trialsCreateenrollmentInput | Enumerable<string>
    facility?: trialsCreatefacilityInput | Enumerable<string>
    gender?: trialsCreategenderInput | Enumerable<string>
    gender_based?: trialsCreategender_basedInput | Enumerable<string>
    gender_description?: trialsCreategender_descriptionInput | Enumerable<string>
    has_dmc?: trialsCreatehas_dmcInput | Enumerable<string>
    has_expanded_access?: trialsCreatehas_expanded_accessInput | Enumerable<string>
    healthy_volunteers?: trialsCreatehealthy_volunteersInput | Enumerable<string>
    intervention_model?: trialsCreateintervention_modelInput | Enumerable<string>
    intervention_model_description?: trialsCreateintervention_model_descriptionInput | Enumerable<string>
    intervention_name?: trialsCreateintervention_nameInput | Enumerable<string>
    intervention_type?: trialsCreateintervention_typeInput | Enumerable<string>
    investigator?: trialsCreateinvestigatorInput | Enumerable<string>
    investigator_affiliation?: trialsCreateinvestigator_affiliationInput | Enumerable<string>
    investigator_full_name?: trialsCreateinvestigator_full_nameInput | Enumerable<string>
    investigator_title?: trialsCreateinvestigator_titleInput | Enumerable<string>
    ipd_access_criteria?: trialsCreateipd_access_criteriaInput | Enumerable<string>
    ipd_description?: trialsCreateipd_descriptionInput | Enumerable<string>
    ipd_info_type?: trialsCreateipd_info_typeInput | Enumerable<string>
    ipd_time_frame?: trialsCreateipd_time_frameInput | Enumerable<string>
    ipd_url?: trialsCreateipd_urlInput | Enumerable<string>
    is_fda_regulated_device?: trialsCreateis_fda_regulated_deviceInput | Enumerable<string>
    is_fda_regulated_drug?: trialsCreateis_fda_regulated_drugInput | Enumerable<string>
    is_us_export?: trialsCreateis_us_exportInput | Enumerable<string>
    keyword?: trialsCreatekeywordInput | Enumerable<string>
    last_known_status?: trialsCreatelast_known_statusInput | Enumerable<string>
    last_name?: trialsCreatelast_nameInput | Enumerable<string>
    last_update_posted?: trialsCreatelast_update_postedInput | Enumerable<string>
    last_update_submitted?: trialsCreatelast_update_submittedInput | Enumerable<string>
    last_update_submitted_qc?: trialsCreatelast_update_submitted_qcInput | Enumerable<string>
    lead_sponsor?: trialsCreatelead_sponsorInput | Enumerable<string>
    limitations_and_caveats?: trialsCreatelimitations_and_caveatsInput | Enumerable<string>
    link_text?: trialsCreatelink_textInput | Enumerable<string>
    masking?: trialsCreatemaskingInput | Enumerable<string>
    masking_description?: trialsCreatemasking_descriptionInput | Enumerable<string>
    maximum_age?: trialsCreatemaximum_ageInput | Enumerable<string>
    measure?: trialsCreatemeasureInput | Enumerable<string>
    mesh_term?: trialsCreatemesh_termInput | Enumerable<string>
    minimum_age?: trialsCreateminimum_ageInput | Enumerable<string>
    name_title?: trialsCreatename_titleInput | Enumerable<string>
    number_of_arms?: trialsCreatenumber_of_armsInput | Enumerable<string>
    number_of_groups?: trialsCreatenumber_of_groupsInput | Enumerable<string>
    observational_model?: trialsCreateobservational_modelInput | Enumerable<string>
    official_title?: trialsCreateofficial_titleInput | Enumerable<string>
    org_study_id?: trialsCreateorg_study_idInput | Enumerable<string>
    organization?: trialsCreateorganizationInput | Enumerable<string>
    other_name?: trialsCreateother_nameInput | Enumerable<string>
    outcome_list?: trialsCreateoutcome_listInput | Enumerable<string>
    overall_status?: trialsCreateoverall_statusInput | Enumerable<string>
    participant_flow?: trialsCreateparticipant_flowInput | Enumerable<string>
    phase?: trialsCreatephaseInput | Enumerable<string>
    phone?: trialsCreatephoneInput | Enumerable<string>
    phone_ext?: trialsCreatephone_extInput | Enumerable<string>
    point_of_contact?: trialsCreatepoint_of_contactInput | Enumerable<string>
    primary_completion_date?: trialsCreateprimary_completion_dateInput | Enumerable<string>
    primary_purpose?: trialsCreateprimary_purposeInput | Enumerable<string>
    provided_document?: trialsCreateprovided_documentInput | Enumerable<string>
    reported_events?: trialsCreatereported_eventsInput | Enumerable<string>
    responsible_party_type?: trialsCreateresponsible_party_typeInput | Enumerable<string>
    results_first_posted?: trialsCreateresults_first_postedInput | Enumerable<string>
    results_first_submitted?: trialsCreateresults_first_submittedInput | Enumerable<string>
    results_first_submitted_qc?: trialsCreateresults_first_submitted_qcInput | Enumerable<string>
    role?: trialsCreateroleInput | Enumerable<string>
    sampling_method?: trialsCreatesampling_methodInput | Enumerable<string>
    secondary_id?: trialsCreatesecondary_idInput | Enumerable<string>
    sharing_ipd?: trialsCreatesharing_ipdInput | Enumerable<string>
    source?: trialsCreatesourceInput | Enumerable<string>
    start_date?: trialsCreatestart_dateInput | Enumerable<string>
    status?: trialsCreatestatusInput | Enumerable<string>
    study_doc?: trialsCreatestudy_docInput | Enumerable<string>
    study_first_posted?: trialsCreatestudy_first_postedInput | Enumerable<string>
    study_first_submitted?: trialsCreatestudy_first_submittedInput | Enumerable<string>
    study_first_submitted_qc?: trialsCreatestudy_first_submitted_qcInput | Enumerable<string>
    study_pop?: trialsCreatestudy_popInput | Enumerable<string>
    study_type?: trialsCreatestudy_typeInput | Enumerable<string>
    target_duration?: trialsCreatetarget_durationInput | Enumerable<string>
    textblock?: trialsCreatetextblockInput | Enumerable<string>
    time_frame?: trialsCreatetime_frameInput | Enumerable<string>
    time_perspective?: trialsCreatetime_perspectiveInput | Enumerable<string>
    type?: trialsCreatetypeInput | Enumerable<string>
    url?: trialsCreateurlInput | Enumerable<string>
    verification_date?: trialsCreateverification_dateInput | Enumerable<string>
    why_stopped?: trialsCreatewhy_stoppedInput | Enumerable<string>
  }

  export type trialsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nct_id?: StringFieldUpdateOperationsInput | string
    PMID?: trialsUpdatePMIDInput | Enumerable<string>
    acronym?: trialsUpdateacronymInput | Enumerable<string>
    affiliation?: trialsUpdateaffiliationInput | Enumerable<string>
    allocation?: trialsUpdateallocationInput | Enumerable<string>
    arm_group_label?: trialsUpdatearm_group_labelInput | Enumerable<string>
    arm_group_type?: trialsUpdatearm_group_typeInput | Enumerable<string>
    baseline?: trialsUpdatebaselineInput | Enumerable<string>
    brief_title?: trialsUpdatebrief_titleInput | Enumerable<string>
    certain_agreements?: trialsUpdatecertain_agreementsInput | Enumerable<string>
    citation?: trialsUpdatecitationInput | Enumerable<string>
    collaborator?: trialsUpdatecollaboratorInput | Enumerable<string>
    completion_date?: trialsUpdatecompletion_dateInput | Enumerable<string>
    condition?: trialsUpdateconditionInput | Enumerable<string>
    contact?: trialsUpdatecontactInput | Enumerable<string>
    contact_backup?: trialsUpdatecontact_backupInput | Enumerable<string>
    country?: trialsUpdatecountryInput | Enumerable<string>
    criteria?: trialsUpdatecriteriaInput | Enumerable<string>
    description?: trialsUpdatedescriptionInput | Enumerable<string>
    disposition_first_posted?: trialsUpdatedisposition_first_postedInput | Enumerable<string>
    disposition_first_submitted?: trialsUpdatedisposition_first_submittedInput | Enumerable<string>
    disposition_first_submitted_qc?: trialsUpdatedisposition_first_submitted_qcInput | Enumerable<string>
    download_date?: trialsUpdatedownload_dateInput | Enumerable<string>
    email?: trialsUpdateemailInput | Enumerable<string>
    enrollment?: trialsUpdateenrollmentInput | Enumerable<string>
    facility?: trialsUpdatefacilityInput | Enumerable<string>
    gender?: trialsUpdategenderInput | Enumerable<string>
    gender_based?: trialsUpdategender_basedInput | Enumerable<string>
    gender_description?: trialsUpdategender_descriptionInput | Enumerable<string>
    has_dmc?: trialsUpdatehas_dmcInput | Enumerable<string>
    has_expanded_access?: trialsUpdatehas_expanded_accessInput | Enumerable<string>
    healthy_volunteers?: trialsUpdatehealthy_volunteersInput | Enumerable<string>
    intervention_model?: trialsUpdateintervention_modelInput | Enumerable<string>
    intervention_model_description?: trialsUpdateintervention_model_descriptionInput | Enumerable<string>
    intervention_name?: trialsUpdateintervention_nameInput | Enumerable<string>
    intervention_type?: trialsUpdateintervention_typeInput | Enumerable<string>
    investigator?: trialsUpdateinvestigatorInput | Enumerable<string>
    investigator_affiliation?: trialsUpdateinvestigator_affiliationInput | Enumerable<string>
    investigator_full_name?: trialsUpdateinvestigator_full_nameInput | Enumerable<string>
    investigator_title?: trialsUpdateinvestigator_titleInput | Enumerable<string>
    ipd_access_criteria?: trialsUpdateipd_access_criteriaInput | Enumerable<string>
    ipd_description?: trialsUpdateipd_descriptionInput | Enumerable<string>
    ipd_info_type?: trialsUpdateipd_info_typeInput | Enumerable<string>
    ipd_time_frame?: trialsUpdateipd_time_frameInput | Enumerable<string>
    ipd_url?: trialsUpdateipd_urlInput | Enumerable<string>
    is_fda_regulated_device?: trialsUpdateis_fda_regulated_deviceInput | Enumerable<string>
    is_fda_regulated_drug?: trialsUpdateis_fda_regulated_drugInput | Enumerable<string>
    is_us_export?: trialsUpdateis_us_exportInput | Enumerable<string>
    keyword?: trialsUpdatekeywordInput | Enumerable<string>
    last_known_status?: trialsUpdatelast_known_statusInput | Enumerable<string>
    last_name?: trialsUpdatelast_nameInput | Enumerable<string>
    last_update_posted?: trialsUpdatelast_update_postedInput | Enumerable<string>
    last_update_submitted?: trialsUpdatelast_update_submittedInput | Enumerable<string>
    last_update_submitted_qc?: trialsUpdatelast_update_submitted_qcInput | Enumerable<string>
    lead_sponsor?: trialsUpdatelead_sponsorInput | Enumerable<string>
    limitations_and_caveats?: trialsUpdatelimitations_and_caveatsInput | Enumerable<string>
    link_text?: trialsUpdatelink_textInput | Enumerable<string>
    masking?: trialsUpdatemaskingInput | Enumerable<string>
    masking_description?: trialsUpdatemasking_descriptionInput | Enumerable<string>
    maximum_age?: trialsUpdatemaximum_ageInput | Enumerable<string>
    measure?: trialsUpdatemeasureInput | Enumerable<string>
    mesh_term?: trialsUpdatemesh_termInput | Enumerable<string>
    minimum_age?: trialsUpdateminimum_ageInput | Enumerable<string>
    name_title?: trialsUpdatename_titleInput | Enumerable<string>
    number_of_arms?: trialsUpdatenumber_of_armsInput | Enumerable<string>
    number_of_groups?: trialsUpdatenumber_of_groupsInput | Enumerable<string>
    observational_model?: trialsUpdateobservational_modelInput | Enumerable<string>
    official_title?: trialsUpdateofficial_titleInput | Enumerable<string>
    org_study_id?: trialsUpdateorg_study_idInput | Enumerable<string>
    organization?: trialsUpdateorganizationInput | Enumerable<string>
    other_name?: trialsUpdateother_nameInput | Enumerable<string>
    outcome_list?: trialsUpdateoutcome_listInput | Enumerable<string>
    overall_status?: trialsUpdateoverall_statusInput | Enumerable<string>
    participant_flow?: trialsUpdateparticipant_flowInput | Enumerable<string>
    phase?: trialsUpdatephaseInput | Enumerable<string>
    phone?: trialsUpdatephoneInput | Enumerable<string>
    phone_ext?: trialsUpdatephone_extInput | Enumerable<string>
    point_of_contact?: trialsUpdatepoint_of_contactInput | Enumerable<string>
    primary_completion_date?: trialsUpdateprimary_completion_dateInput | Enumerable<string>
    primary_purpose?: trialsUpdateprimary_purposeInput | Enumerable<string>
    provided_document?: trialsUpdateprovided_documentInput | Enumerable<string>
    reported_events?: trialsUpdatereported_eventsInput | Enumerable<string>
    responsible_party_type?: trialsUpdateresponsible_party_typeInput | Enumerable<string>
    results_first_posted?: trialsUpdateresults_first_postedInput | Enumerable<string>
    results_first_submitted?: trialsUpdateresults_first_submittedInput | Enumerable<string>
    results_first_submitted_qc?: trialsUpdateresults_first_submitted_qcInput | Enumerable<string>
    role?: trialsUpdateroleInput | Enumerable<string>
    sampling_method?: trialsUpdatesampling_methodInput | Enumerable<string>
    secondary_id?: trialsUpdatesecondary_idInput | Enumerable<string>
    sharing_ipd?: trialsUpdatesharing_ipdInput | Enumerable<string>
    source?: trialsUpdatesourceInput | Enumerable<string>
    start_date?: trialsUpdatestart_dateInput | Enumerable<string>
    status?: trialsUpdatestatusInput | Enumerable<string>
    study_doc?: trialsUpdatestudy_docInput | Enumerable<string>
    study_first_posted?: trialsUpdatestudy_first_postedInput | Enumerable<string>
    study_first_submitted?: trialsUpdatestudy_first_submittedInput | Enumerable<string>
    study_first_submitted_qc?: trialsUpdatestudy_first_submitted_qcInput | Enumerable<string>
    study_pop?: trialsUpdatestudy_popInput | Enumerable<string>
    study_type?: trialsUpdatestudy_typeInput | Enumerable<string>
    target_duration?: trialsUpdatetarget_durationInput | Enumerable<string>
    textblock?: trialsUpdatetextblockInput | Enumerable<string>
    time_frame?: trialsUpdatetime_frameInput | Enumerable<string>
    time_perspective?: trialsUpdatetime_perspectiveInput | Enumerable<string>
    type?: trialsUpdatetypeInput | Enumerable<string>
    url?: trialsUpdateurlInput | Enumerable<string>
    verification_date?: trialsUpdateverification_dateInput | Enumerable<string>
    why_stopped?: trialsUpdatewhy_stoppedInput | Enumerable<string>
  }

  export type trialsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nct_id?: StringFieldUpdateOperationsInput | string
    PMID?: trialsUpdatePMIDInput | Enumerable<string>
    acronym?: trialsUpdateacronymInput | Enumerable<string>
    affiliation?: trialsUpdateaffiliationInput | Enumerable<string>
    allocation?: trialsUpdateallocationInput | Enumerable<string>
    arm_group_label?: trialsUpdatearm_group_labelInput | Enumerable<string>
    arm_group_type?: trialsUpdatearm_group_typeInput | Enumerable<string>
    baseline?: trialsUpdatebaselineInput | Enumerable<string>
    brief_title?: trialsUpdatebrief_titleInput | Enumerable<string>
    certain_agreements?: trialsUpdatecertain_agreementsInput | Enumerable<string>
    citation?: trialsUpdatecitationInput | Enumerable<string>
    collaborator?: trialsUpdatecollaboratorInput | Enumerable<string>
    completion_date?: trialsUpdatecompletion_dateInput | Enumerable<string>
    condition?: trialsUpdateconditionInput | Enumerable<string>
    contact?: trialsUpdatecontactInput | Enumerable<string>
    contact_backup?: trialsUpdatecontact_backupInput | Enumerable<string>
    country?: trialsUpdatecountryInput | Enumerable<string>
    criteria?: trialsUpdatecriteriaInput | Enumerable<string>
    description?: trialsUpdatedescriptionInput | Enumerable<string>
    disposition_first_posted?: trialsUpdatedisposition_first_postedInput | Enumerable<string>
    disposition_first_submitted?: trialsUpdatedisposition_first_submittedInput | Enumerable<string>
    disposition_first_submitted_qc?: trialsUpdatedisposition_first_submitted_qcInput | Enumerable<string>
    download_date?: trialsUpdatedownload_dateInput | Enumerable<string>
    email?: trialsUpdateemailInput | Enumerable<string>
    enrollment?: trialsUpdateenrollmentInput | Enumerable<string>
    facility?: trialsUpdatefacilityInput | Enumerable<string>
    gender?: trialsUpdategenderInput | Enumerable<string>
    gender_based?: trialsUpdategender_basedInput | Enumerable<string>
    gender_description?: trialsUpdategender_descriptionInput | Enumerable<string>
    has_dmc?: trialsUpdatehas_dmcInput | Enumerable<string>
    has_expanded_access?: trialsUpdatehas_expanded_accessInput | Enumerable<string>
    healthy_volunteers?: trialsUpdatehealthy_volunteersInput | Enumerable<string>
    intervention_model?: trialsUpdateintervention_modelInput | Enumerable<string>
    intervention_model_description?: trialsUpdateintervention_model_descriptionInput | Enumerable<string>
    intervention_name?: trialsUpdateintervention_nameInput | Enumerable<string>
    intervention_type?: trialsUpdateintervention_typeInput | Enumerable<string>
    investigator?: trialsUpdateinvestigatorInput | Enumerable<string>
    investigator_affiliation?: trialsUpdateinvestigator_affiliationInput | Enumerable<string>
    investigator_full_name?: trialsUpdateinvestigator_full_nameInput | Enumerable<string>
    investigator_title?: trialsUpdateinvestigator_titleInput | Enumerable<string>
    ipd_access_criteria?: trialsUpdateipd_access_criteriaInput | Enumerable<string>
    ipd_description?: trialsUpdateipd_descriptionInput | Enumerable<string>
    ipd_info_type?: trialsUpdateipd_info_typeInput | Enumerable<string>
    ipd_time_frame?: trialsUpdateipd_time_frameInput | Enumerable<string>
    ipd_url?: trialsUpdateipd_urlInput | Enumerable<string>
    is_fda_regulated_device?: trialsUpdateis_fda_regulated_deviceInput | Enumerable<string>
    is_fda_regulated_drug?: trialsUpdateis_fda_regulated_drugInput | Enumerable<string>
    is_us_export?: trialsUpdateis_us_exportInput | Enumerable<string>
    keyword?: trialsUpdatekeywordInput | Enumerable<string>
    last_known_status?: trialsUpdatelast_known_statusInput | Enumerable<string>
    last_name?: trialsUpdatelast_nameInput | Enumerable<string>
    last_update_posted?: trialsUpdatelast_update_postedInput | Enumerable<string>
    last_update_submitted?: trialsUpdatelast_update_submittedInput | Enumerable<string>
    last_update_submitted_qc?: trialsUpdatelast_update_submitted_qcInput | Enumerable<string>
    lead_sponsor?: trialsUpdatelead_sponsorInput | Enumerable<string>
    limitations_and_caveats?: trialsUpdatelimitations_and_caveatsInput | Enumerable<string>
    link_text?: trialsUpdatelink_textInput | Enumerable<string>
    masking?: trialsUpdatemaskingInput | Enumerable<string>
    masking_description?: trialsUpdatemasking_descriptionInput | Enumerable<string>
    maximum_age?: trialsUpdatemaximum_ageInput | Enumerable<string>
    measure?: trialsUpdatemeasureInput | Enumerable<string>
    mesh_term?: trialsUpdatemesh_termInput | Enumerable<string>
    minimum_age?: trialsUpdateminimum_ageInput | Enumerable<string>
    name_title?: trialsUpdatename_titleInput | Enumerable<string>
    number_of_arms?: trialsUpdatenumber_of_armsInput | Enumerable<string>
    number_of_groups?: trialsUpdatenumber_of_groupsInput | Enumerable<string>
    observational_model?: trialsUpdateobservational_modelInput | Enumerable<string>
    official_title?: trialsUpdateofficial_titleInput | Enumerable<string>
    org_study_id?: trialsUpdateorg_study_idInput | Enumerable<string>
    organization?: trialsUpdateorganizationInput | Enumerable<string>
    other_name?: trialsUpdateother_nameInput | Enumerable<string>
    outcome_list?: trialsUpdateoutcome_listInput | Enumerable<string>
    overall_status?: trialsUpdateoverall_statusInput | Enumerable<string>
    participant_flow?: trialsUpdateparticipant_flowInput | Enumerable<string>
    phase?: trialsUpdatephaseInput | Enumerable<string>
    phone?: trialsUpdatephoneInput | Enumerable<string>
    phone_ext?: trialsUpdatephone_extInput | Enumerable<string>
    point_of_contact?: trialsUpdatepoint_of_contactInput | Enumerable<string>
    primary_completion_date?: trialsUpdateprimary_completion_dateInput | Enumerable<string>
    primary_purpose?: trialsUpdateprimary_purposeInput | Enumerable<string>
    provided_document?: trialsUpdateprovided_documentInput | Enumerable<string>
    reported_events?: trialsUpdatereported_eventsInput | Enumerable<string>
    responsible_party_type?: trialsUpdateresponsible_party_typeInput | Enumerable<string>
    results_first_posted?: trialsUpdateresults_first_postedInput | Enumerable<string>
    results_first_submitted?: trialsUpdateresults_first_submittedInput | Enumerable<string>
    results_first_submitted_qc?: trialsUpdateresults_first_submitted_qcInput | Enumerable<string>
    role?: trialsUpdateroleInput | Enumerable<string>
    sampling_method?: trialsUpdatesampling_methodInput | Enumerable<string>
    secondary_id?: trialsUpdatesecondary_idInput | Enumerable<string>
    sharing_ipd?: trialsUpdatesharing_ipdInput | Enumerable<string>
    source?: trialsUpdatesourceInput | Enumerable<string>
    start_date?: trialsUpdatestart_dateInput | Enumerable<string>
    status?: trialsUpdatestatusInput | Enumerable<string>
    study_doc?: trialsUpdatestudy_docInput | Enumerable<string>
    study_first_posted?: trialsUpdatestudy_first_postedInput | Enumerable<string>
    study_first_submitted?: trialsUpdatestudy_first_submittedInput | Enumerable<string>
    study_first_submitted_qc?: trialsUpdatestudy_first_submitted_qcInput | Enumerable<string>
    study_pop?: trialsUpdatestudy_popInput | Enumerable<string>
    study_type?: trialsUpdatestudy_typeInput | Enumerable<string>
    target_duration?: trialsUpdatetarget_durationInput | Enumerable<string>
    textblock?: trialsUpdatetextblockInput | Enumerable<string>
    time_frame?: trialsUpdatetime_frameInput | Enumerable<string>
    time_perspective?: trialsUpdatetime_perspectiveInput | Enumerable<string>
    type?: trialsUpdatetypeInput | Enumerable<string>
    url?: trialsUpdateurlInput | Enumerable<string>
    verification_date?: trialsUpdateverification_dateInput | Enumerable<string>
    why_stopped?: trialsUpdatewhy_stoppedInput | Enumerable<string>
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string> | string
    notIn?: Enumerable<string> | string
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type StringNullableListFilter = {
    equals?: Enumerable<string> | null
    has?: string | null
    hasEvery?: Enumerable<string>
    hasSome?: Enumerable<string>
    isEmpty?: boolean
  }

  export type trialsCountOrderByAggregateInput = {
    id?: SortOrder
    nct_id?: SortOrder
    PMID?: SortOrder
    acronym?: SortOrder
    affiliation?: SortOrder
    allocation?: SortOrder
    arm_group_label?: SortOrder
    arm_group_type?: SortOrder
    baseline?: SortOrder
    brief_title?: SortOrder
    certain_agreements?: SortOrder
    citation?: SortOrder
    collaborator?: SortOrder
    completion_date?: SortOrder
    condition?: SortOrder
    contact?: SortOrder
    contact_backup?: SortOrder
    country?: SortOrder
    criteria?: SortOrder
    description?: SortOrder
    disposition_first_posted?: SortOrder
    disposition_first_submitted?: SortOrder
    disposition_first_submitted_qc?: SortOrder
    download_date?: SortOrder
    email?: SortOrder
    enrollment?: SortOrder
    facility?: SortOrder
    gender?: SortOrder
    gender_based?: SortOrder
    gender_description?: SortOrder
    has_dmc?: SortOrder
    has_expanded_access?: SortOrder
    healthy_volunteers?: SortOrder
    intervention_model?: SortOrder
    intervention_model_description?: SortOrder
    intervention_name?: SortOrder
    intervention_type?: SortOrder
    investigator?: SortOrder
    investigator_affiliation?: SortOrder
    investigator_full_name?: SortOrder
    investigator_title?: SortOrder
    ipd_access_criteria?: SortOrder
    ipd_description?: SortOrder
    ipd_info_type?: SortOrder
    ipd_time_frame?: SortOrder
    ipd_url?: SortOrder
    is_fda_regulated_device?: SortOrder
    is_fda_regulated_drug?: SortOrder
    is_us_export?: SortOrder
    keyword?: SortOrder
    last_known_status?: SortOrder
    last_name?: SortOrder
    last_update_posted?: SortOrder
    last_update_submitted?: SortOrder
    last_update_submitted_qc?: SortOrder
    lead_sponsor?: SortOrder
    limitations_and_caveats?: SortOrder
    link_text?: SortOrder
    masking?: SortOrder
    masking_description?: SortOrder
    maximum_age?: SortOrder
    measure?: SortOrder
    mesh_term?: SortOrder
    minimum_age?: SortOrder
    name_title?: SortOrder
    number_of_arms?: SortOrder
    number_of_groups?: SortOrder
    observational_model?: SortOrder
    official_title?: SortOrder
    org_study_id?: SortOrder
    organization?: SortOrder
    other_name?: SortOrder
    outcome_list?: SortOrder
    overall_status?: SortOrder
    participant_flow?: SortOrder
    phase?: SortOrder
    phone?: SortOrder
    phone_ext?: SortOrder
    point_of_contact?: SortOrder
    primary_completion_date?: SortOrder
    primary_purpose?: SortOrder
    provided_document?: SortOrder
    reported_events?: SortOrder
    responsible_party_type?: SortOrder
    results_first_posted?: SortOrder
    results_first_submitted?: SortOrder
    results_first_submitted_qc?: SortOrder
    role?: SortOrder
    sampling_method?: SortOrder
    secondary_id?: SortOrder
    sharing_ipd?: SortOrder
    source?: SortOrder
    start_date?: SortOrder
    status?: SortOrder
    study_doc?: SortOrder
    study_first_posted?: SortOrder
    study_first_submitted?: SortOrder
    study_first_submitted_qc?: SortOrder
    study_pop?: SortOrder
    study_type?: SortOrder
    target_duration?: SortOrder
    textblock?: SortOrder
    time_frame?: SortOrder
    time_perspective?: SortOrder
    type?: SortOrder
    url?: SortOrder
    verification_date?: SortOrder
    why_stopped?: SortOrder
  }

  export type trialsMaxOrderByAggregateInput = {
    id?: SortOrder
    nct_id?: SortOrder
  }

  export type trialsMinOrderByAggregateInput = {
    id?: SortOrder
    nct_id?: SortOrder
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string> | string
    notIn?: Enumerable<string> | string
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type trialsCreatePMIDInput = {
    set: Enumerable<string>
  }

  export type trialsCreateacronymInput = {
    set: Enumerable<string>
  }

  export type trialsCreateaffiliationInput = {
    set: Enumerable<string>
  }

  export type trialsCreateallocationInput = {
    set: Enumerable<string>
  }

  export type trialsCreatearm_group_labelInput = {
    set: Enumerable<string>
  }

  export type trialsCreatearm_group_typeInput = {
    set: Enumerable<string>
  }

  export type trialsCreatebaselineInput = {
    set: Enumerable<string>
  }

  export type trialsCreatebrief_titleInput = {
    set: Enumerable<string>
  }

  export type trialsCreatecertain_agreementsInput = {
    set: Enumerable<string>
  }

  export type trialsCreatecitationInput = {
    set: Enumerable<string>
  }

  export type trialsCreatecollaboratorInput = {
    set: Enumerable<string>
  }

  export type trialsCreatecompletion_dateInput = {
    set: Enumerable<string>
  }

  export type trialsCreateconditionInput = {
    set: Enumerable<string>
  }

  export type trialsCreatecontactInput = {
    set: Enumerable<string>
  }

  export type trialsCreatecontact_backupInput = {
    set: Enumerable<string>
  }

  export type trialsCreatecountryInput = {
    set: Enumerable<string>
  }

  export type trialsCreatecriteriaInput = {
    set: Enumerable<string>
  }

  export type trialsCreatedescriptionInput = {
    set: Enumerable<string>
  }

  export type trialsCreatedisposition_first_postedInput = {
    set: Enumerable<string>
  }

  export type trialsCreatedisposition_first_submittedInput = {
    set: Enumerable<string>
  }

  export type trialsCreatedisposition_first_submitted_qcInput = {
    set: Enumerable<string>
  }

  export type trialsCreatedownload_dateInput = {
    set: Enumerable<string>
  }

  export type trialsCreateemailInput = {
    set: Enumerable<string>
  }

  export type trialsCreateenrollmentInput = {
    set: Enumerable<string>
  }

  export type trialsCreatefacilityInput = {
    set: Enumerable<string>
  }

  export type trialsCreategenderInput = {
    set: Enumerable<string>
  }

  export type trialsCreategender_basedInput = {
    set: Enumerable<string>
  }

  export type trialsCreategender_descriptionInput = {
    set: Enumerable<string>
  }

  export type trialsCreatehas_dmcInput = {
    set: Enumerable<string>
  }

  export type trialsCreatehas_expanded_accessInput = {
    set: Enumerable<string>
  }

  export type trialsCreatehealthy_volunteersInput = {
    set: Enumerable<string>
  }

  export type trialsCreateintervention_modelInput = {
    set: Enumerable<string>
  }

  export type trialsCreateintervention_model_descriptionInput = {
    set: Enumerable<string>
  }

  export type trialsCreateintervention_nameInput = {
    set: Enumerable<string>
  }

  export type trialsCreateintervention_typeInput = {
    set: Enumerable<string>
  }

  export type trialsCreateinvestigatorInput = {
    set: Enumerable<string>
  }

  export type trialsCreateinvestigator_affiliationInput = {
    set: Enumerable<string>
  }

  export type trialsCreateinvestigator_full_nameInput = {
    set: Enumerable<string>
  }

  export type trialsCreateinvestigator_titleInput = {
    set: Enumerable<string>
  }

  export type trialsCreateipd_access_criteriaInput = {
    set: Enumerable<string>
  }

  export type trialsCreateipd_descriptionInput = {
    set: Enumerable<string>
  }

  export type trialsCreateipd_info_typeInput = {
    set: Enumerable<string>
  }

  export type trialsCreateipd_time_frameInput = {
    set: Enumerable<string>
  }

  export type trialsCreateipd_urlInput = {
    set: Enumerable<string>
  }

  export type trialsCreateis_fda_regulated_deviceInput = {
    set: Enumerable<string>
  }

  export type trialsCreateis_fda_regulated_drugInput = {
    set: Enumerable<string>
  }

  export type trialsCreateis_us_exportInput = {
    set: Enumerable<string>
  }

  export type trialsCreatekeywordInput = {
    set: Enumerable<string>
  }

  export type trialsCreatelast_known_statusInput = {
    set: Enumerable<string>
  }

  export type trialsCreatelast_nameInput = {
    set: Enumerable<string>
  }

  export type trialsCreatelast_update_postedInput = {
    set: Enumerable<string>
  }

  export type trialsCreatelast_update_submittedInput = {
    set: Enumerable<string>
  }

  export type trialsCreatelast_update_submitted_qcInput = {
    set: Enumerable<string>
  }

  export type trialsCreatelead_sponsorInput = {
    set: Enumerable<string>
  }

  export type trialsCreatelimitations_and_caveatsInput = {
    set: Enumerable<string>
  }

  export type trialsCreatelink_textInput = {
    set: Enumerable<string>
  }

  export type trialsCreatemaskingInput = {
    set: Enumerable<string>
  }

  export type trialsCreatemasking_descriptionInput = {
    set: Enumerable<string>
  }

  export type trialsCreatemaximum_ageInput = {
    set: Enumerable<string>
  }

  export type trialsCreatemeasureInput = {
    set: Enumerable<string>
  }

  export type trialsCreatemesh_termInput = {
    set: Enumerable<string>
  }

  export type trialsCreateminimum_ageInput = {
    set: Enumerable<string>
  }

  export type trialsCreatename_titleInput = {
    set: Enumerable<string>
  }

  export type trialsCreatenumber_of_armsInput = {
    set: Enumerable<string>
  }

  export type trialsCreatenumber_of_groupsInput = {
    set: Enumerable<string>
  }

  export type trialsCreateobservational_modelInput = {
    set: Enumerable<string>
  }

  export type trialsCreateofficial_titleInput = {
    set: Enumerable<string>
  }

  export type trialsCreateorg_study_idInput = {
    set: Enumerable<string>
  }

  export type trialsCreateorganizationInput = {
    set: Enumerable<string>
  }

  export type trialsCreateother_nameInput = {
    set: Enumerable<string>
  }

  export type trialsCreateoutcome_listInput = {
    set: Enumerable<string>
  }

  export type trialsCreateoverall_statusInput = {
    set: Enumerable<string>
  }

  export type trialsCreateparticipant_flowInput = {
    set: Enumerable<string>
  }

  export type trialsCreatephaseInput = {
    set: Enumerable<string>
  }

  export type trialsCreatephoneInput = {
    set: Enumerable<string>
  }

  export type trialsCreatephone_extInput = {
    set: Enumerable<string>
  }

  export type trialsCreatepoint_of_contactInput = {
    set: Enumerable<string>
  }

  export type trialsCreateprimary_completion_dateInput = {
    set: Enumerable<string>
  }

  export type trialsCreateprimary_purposeInput = {
    set: Enumerable<string>
  }

  export type trialsCreateprovided_documentInput = {
    set: Enumerable<string>
  }

  export type trialsCreatereported_eventsInput = {
    set: Enumerable<string>
  }

  export type trialsCreateresponsible_party_typeInput = {
    set: Enumerable<string>
  }

  export type trialsCreateresults_first_postedInput = {
    set: Enumerable<string>
  }

  export type trialsCreateresults_first_submittedInput = {
    set: Enumerable<string>
  }

  export type trialsCreateresults_first_submitted_qcInput = {
    set: Enumerable<string>
  }

  export type trialsCreateroleInput = {
    set: Enumerable<string>
  }

  export type trialsCreatesampling_methodInput = {
    set: Enumerable<string>
  }

  export type trialsCreatesecondary_idInput = {
    set: Enumerable<string>
  }

  export type trialsCreatesharing_ipdInput = {
    set: Enumerable<string>
  }

  export type trialsCreatesourceInput = {
    set: Enumerable<string>
  }

  export type trialsCreatestart_dateInput = {
    set: Enumerable<string>
  }

  export type trialsCreatestatusInput = {
    set: Enumerable<string>
  }

  export type trialsCreatestudy_docInput = {
    set: Enumerable<string>
  }

  export type trialsCreatestudy_first_postedInput = {
    set: Enumerable<string>
  }

  export type trialsCreatestudy_first_submittedInput = {
    set: Enumerable<string>
  }

  export type trialsCreatestudy_first_submitted_qcInput = {
    set: Enumerable<string>
  }

  export type trialsCreatestudy_popInput = {
    set: Enumerable<string>
  }

  export type trialsCreatestudy_typeInput = {
    set: Enumerable<string>
  }

  export type trialsCreatetarget_durationInput = {
    set: Enumerable<string>
  }

  export type trialsCreatetextblockInput = {
    set: Enumerable<string>
  }

  export type trialsCreatetime_frameInput = {
    set: Enumerable<string>
  }

  export type trialsCreatetime_perspectiveInput = {
    set: Enumerable<string>
  }

  export type trialsCreatetypeInput = {
    set: Enumerable<string>
  }

  export type trialsCreateurlInput = {
    set: Enumerable<string>
  }

  export type trialsCreateverification_dateInput = {
    set: Enumerable<string>
  }

  export type trialsCreatewhy_stoppedInput = {
    set: Enumerable<string>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type trialsUpdatePMIDInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateacronymInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateaffiliationInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateallocationInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatearm_group_labelInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatearm_group_typeInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatebaselineInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatebrief_titleInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatecertain_agreementsInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatecitationInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatecollaboratorInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatecompletion_dateInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateconditionInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatecontactInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatecontact_backupInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatecountryInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatecriteriaInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatedescriptionInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatedisposition_first_postedInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatedisposition_first_submittedInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatedisposition_first_submitted_qcInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatedownload_dateInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateemailInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateenrollmentInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatefacilityInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdategenderInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdategender_basedInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdategender_descriptionInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatehas_dmcInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatehas_expanded_accessInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatehealthy_volunteersInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateintervention_modelInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateintervention_model_descriptionInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateintervention_nameInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateintervention_typeInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateinvestigatorInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateinvestigator_affiliationInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateinvestigator_full_nameInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateinvestigator_titleInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateipd_access_criteriaInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateipd_descriptionInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateipd_info_typeInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateipd_time_frameInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateipd_urlInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateis_fda_regulated_deviceInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateis_fda_regulated_drugInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateis_us_exportInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatekeywordInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatelast_known_statusInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatelast_nameInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatelast_update_postedInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatelast_update_submittedInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatelast_update_submitted_qcInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatelead_sponsorInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatelimitations_and_caveatsInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatelink_textInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatemaskingInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatemasking_descriptionInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatemaximum_ageInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatemeasureInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatemesh_termInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateminimum_ageInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatename_titleInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatenumber_of_armsInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatenumber_of_groupsInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateobservational_modelInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateofficial_titleInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateorg_study_idInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateorganizationInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateother_nameInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateoutcome_listInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateoverall_statusInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateparticipant_flowInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatephaseInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatephoneInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatephone_extInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatepoint_of_contactInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateprimary_completion_dateInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateprimary_purposeInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateprovided_documentInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatereported_eventsInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateresponsible_party_typeInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateresults_first_postedInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateresults_first_submittedInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateresults_first_submitted_qcInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateroleInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatesampling_methodInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatesecondary_idInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatesharing_ipdInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatesourceInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatestart_dateInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatestatusInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatestudy_docInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatestudy_first_postedInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatestudy_first_submittedInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatestudy_first_submitted_qcInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatestudy_popInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatestudy_typeInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatetarget_durationInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatetextblockInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatetime_frameInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatetime_perspectiveInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatetypeInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateurlInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdateverification_dateInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type trialsUpdatewhy_stoppedInput = {
    set?: Enumerable<string>
    push?: string | Enumerable<string>
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string> | string
    notIn?: Enumerable<string> | string
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string> | string
    notIn?: Enumerable<string> | string
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number> | number
    notIn?: Enumerable<number> | number
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}